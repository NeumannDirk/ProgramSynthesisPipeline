\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Mar 13 22:33:00 CET 2024
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Users/DirkNeumann/eclipse-workspaces/runtime-EclipseApplication/de.tu_bs.cs.isf.corc.examples";
\include "helper.key";
\programVariables {
int n;
int f;
Heap heapAtPre;
}\problem {
     geq(n, Z(0(#)))
   & geq(n, Z(0(#)))
   & lt(n, Z(6(#)))
   & wellFormed(heap)
-> {heapAtPre:=heap}
     (n = Z(0(#)) | n = Z(1(#)) | geq(n, Z(2(#))))

}

\proof {
(keyLog "0" (keyUser "DirkNeumann" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "7")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "orRight" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "orRight" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "inEqSimp_geqRight" (formula "6"))
(rule "mul_literals" (formula "1") (term "1,0,0"))
(rule "add_literals" (formula "1") (term "0,0"))
(rule "inEqSimp_ltToLeq" (formula "3"))
(rule "mul_literals" (formula "3") (term "1,0,0"))
(rule "add_literals" (formula "3") (term "0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "1"))
(rule "mul_literals" (formula "1") (term "1"))
(rule "inEqSimp_sepPosMonomial0" (formula "3"))
(rule "mul_literals" (formula "3") (term "1"))
(rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "6"))
(rule "add_literals" (formula "1") (term "1"))
(rule "inEqSimp_contradEq3" (formula "6") (ifseqformula "1"))
(rule "add_zero_left" (formula "6") (term "0,0"))
(rule "mul_literals" (formula "6") (term "0,0"))
(rule "qeq_literals" (formula "6") (term "0"))
(builtin "One Step Simplification" (formula "6"))
(rule "false_right" (formula "6"))
(rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "5"))
(rule "add_zero_right" (formula "2") (term "1"))
(rule "inEqSimp_contradEq7" (formula "5") (ifseqformula "2"))
(rule "times_zero_1" (formula "5") (term "1,0,0"))
(rule "add_zero_right" (formula "5") (term "0,0"))
(rule "leq_literals" (formula "5") (term "0"))
(builtin "One Step Simplification" (formula "5"))
(rule "false_right" (formula "5"))
(rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
(rule "leq_literals" (formula "3") (term "0"))
(builtin "One Step Simplification" (formula "3"))
(rule "true_left" (formula "3"))
(rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
(rule "qeq_literals" (formula "1") (term "0"))
(builtin "One Step Simplification" (formula "1"))
(rule "closeFalse" (formula "1"))
)

}
//statementid:{1371b114-1ad7-4f1c-8c79-0029b97fb0ea}