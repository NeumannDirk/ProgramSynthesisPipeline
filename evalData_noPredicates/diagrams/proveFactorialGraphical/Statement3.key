\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Mar 14 12:13:32 CET 2024
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "D:/evalData_noPredicates";
\include "helper.key";
\programVariables {
int n;
int f;
int n;
int f;
int n_old;
Heap heapAtPre;
}\problem {
     geq(n, Z(0(#)))
   & geq(n, Z(2(#)))
   & geq(n, Z(0(#)))
   & lt(n, Z(6(#)))
   & wellFormed(heap)
-> {heapAtPre:=heap || n_old:=n}
     \<{
         f=n*Helper.factorial2(n-1);
       }\> (f = Helper::factorial2(heap, n) & n = n_old)

}

\proof {
(keyLog "0" (keyUser "DirkNeumann" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "3101")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "5") (term "0,0,1"))
(rule "eqSymm" (formula "5") (term "1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "3"))
(rule "mul_literals" (formula "3") (term "1,0,0"))
(rule "add_literals" (formula "3") (term "0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "3"))
(rule "mul_literals" (formula "3") (term "1"))
(rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
(rule "leq_literals" (formula "2") (term "0"))
(builtin "One Step Simplification" (formula "2"))
(rule "true_left" (formula "2"))
(rule "compound_multiplication_2" (formula "4") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x"))
(rule "assignment" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_1"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "4") (term "1"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "var"))
(rule "assignmentSubtractionInt" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "translateJavaSubInt" (formula "4") (term "0,1,0"))
(rule "polySimp_elimSub" (formula "4") (term "0,1,0"))
(rule "mul_literals" (formula "4") (term "1,0,1,0"))
(rule "polySimp_addComm0" (formula "4") (term "0,1,0"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=x_2"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_2"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_3"))
(rule "assignment" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_factorial,savedHeapBefore_factorial"))
(builtin "One Step Simplification" (formula "4"))
(rule "ifElseUnfold" (formula "4") (term "1") (inst "#boolv=x_4"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_4"))
(rule "less_equal_than_comparison_simple" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,1,0"))
(rule "mul_literals" (formula "4") (term "1,0,0,1,0"))
(rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,1,0") (ifseqformula "1"))
(rule "qeq_literals" (formula "4") (term "0,0,0,1,0"))
(builtin "One Step Simplification" (formula "4"))
(rule "ifElseSplit" (formula "4"))
(branch "if x_4 true"
   (builtin "One Step Simplification" (formula "5"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x_4 false"
   (builtin "One Step Simplification" (formula "5"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "returnUnfold" (formula "4") (term "1") (inst "#v0=x_4"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_5"))
   (rule "compound_multiplication_2" (formula "4") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_6"))
   (rule "assignment" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_7"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "4") (term "1"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "var_1"))
   (rule "assignmentSubtractionInt" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "translateJavaSubInt" (formula "4") (term "0,1,0"))
   (rule "polySimp_elimSub" (formula "4") (term "0,1,0"))
   (rule "mul_literals" (formula "4") (term "1,0,1,0"))
   (rule "polySimp_addComm1" (formula "4") (term "0,1,0"))
   (rule "add_literals" (formula "4") (term "0,0,1,0"))
   (rule "methodCallWithAssignmentWithinClass" (formula "4") (term "1") (inst "#v0=x_8"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_8"))
   (rule "variableDeclarationAssign" (formula "4") (term "1"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_9"))
   (rule "assignment" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_factorial_0,savedHeapBefore_factorial_0"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "ifElseUnfold" (formula "4") (term "1") (inst "#boolv=x_10"))
   (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_10"))
   (rule "less_equal_than_comparison_simple" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,1,0"))
   (rule "mul_literals" (formula "4") (term "1,0,0,1,0"))
   (rule "ifElseSplit" (formula "4"))
   (branch "if x_10 true"
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
      (rule "leq_literals" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
      (rule "leq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
      (rule "qeq_literals" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "1"))
      (rule "add_literals" (formula "3") (term "0,1,0"))
      (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
      (rule "methodCallReturn" (formula "3") (term "1"))
      (rule "assignment" (formula "3") (term "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "methodCallEmpty" (formula "3") (term "1"))
      (rule "blockEmpty" (formula "3") (term "1"))
      (rule "assignment" (formula "3") (term "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "blockEmpty" (formula "3") (term "1"))
      (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
      (rule "mul_literals" (formula "3") (term "0,1,0"))
      (rule "methodCallReturn" (formula "3") (term "1"))
      (rule "assignment" (formula "3") (term "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "methodCallEmpty" (formula "3") (term "1"))
      (rule "blockEmpty" (formula "3") (term "1"))
      (rule "assignment" (formula "3") (term "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "blockEmpty" (formula "3") (term "1"))
      (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
      (rule "mul_literals" (formula "3") (term "0,1,0"))
      (rule "emptyModality" (formula "3") (term "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "eqSymm" (formula "3") (term "1"))
      (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
      (builtin "Evaluate Query" (formula "3") (term "0") (newnames "x_112,callee,queryResult_2,res_factorial_2"))
      (rule "replaceKnownQuery_Helper_factorial(heap,Z(2(#)))_01_0" (formula "4") (term "0"))
      (rule "notLeft" (formula "1"))
      (rule "eqSymm" (formula "3") (term "0,0,1"))
      (rule "variableDeclaration" (formula "3") (term "1") (newnames "queryResult_2"))
      (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x"))
      (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_113"))
      (rule "variableDeclarationAssign" (formula "3") (term "1"))
      (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_114"))
      (rule "assignment" (formula "3") (term "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_19,savedHeapBefore_factorial_19"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_115"))
      (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_115"))
      (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "leq_literals" (formula "3") (term "0,0,1,0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "ifElseSplit" (formula "3"))
      (branch "if x_115 true"
         (builtin "One Step Simplification" (formula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_115 false"
         (builtin "One Step Simplification" (formula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_115"))
         (rule "variableDeclarationAssign" (formula "3") (term "1"))
         (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_116"))
         (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_118") (inst "#v0=x_117"))
         (rule "variableDeclarationAssign" (formula "3") (term "1"))
         (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_117"))
         (rule "assignment" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "variableDeclarationAssign" (formula "3") (term "1"))
         (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_118"))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
         (rule "variableDeclarationAssign" (formula "3") (term "1"))
         (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_17"))
         (rule "assignmentSubtractionInt" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
         (rule "sub_literals" (formula "3") (term "0,1,0"))
         (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_119"))
         (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_119"))
         (rule "variableDeclarationAssign" (formula "3") (term "1"))
         (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_120"))
         (rule "assignment" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_20,savedHeapBefore_factorial_20"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_121"))
         (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_121"))
         (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "leq_literals" (formula "3") (term "0,0,1,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "ifElseSplit" (formula "3"))
         (branch "if x_121 true"
            (builtin "One Step Simplification" (formula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_121 false"
            (builtin "One Step Simplification" (formula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_121"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_122"))
            (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_124") (inst "#v0=x_123"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_123"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_124"))
            (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_18"))
            (rule "assignmentSubtractionInt" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
            (rule "sub_literals" (formula "3") (term "0,1,0"))
            (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_125"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_125"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_126"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_21,savedHeapBefore_factorial_21"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_127"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_127"))
            (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "leq_literals" (formula "3") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "ifElseSplit" (formula "3"))
            (branch "if x_127 true"
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "methodCallReturn" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodCallEmpty" (formula "3") (term "1"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0"))
               (rule "methodCallReturn" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodCallEmpty" (formula "3") (term "1"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0"))
               (rule "methodCallReturn" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodCallEmpty" (formula "3") (term "1"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodCallEmpty" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "emptyModality" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
               (rule "closeTrue" (formula "3"))
            )
            (branch "if x_127 false"
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
   )
   (branch "if x_10 false"
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_leqRight" (formula "4"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
      (rule "leq_literals" (formula "2") (term "0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "returnUnfold" (formula "4") (term "1") (inst "#v0=x_10"))
      (rule "variableDeclarationAssign" (formula "4") (term "1"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_11"))
      (rule "compound_multiplication_2" (formula "4") (term "1") (inst "#v1=x_13") (inst "#v0=x_12"))
      (rule "variableDeclarationAssign" (formula "4") (term "1"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_12"))
      (rule "assignment" (formula "4") (term "1"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "variableDeclarationAssign" (formula "4") (term "1"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_13"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "4") (term "1"))
      (rule "variableDeclarationAssign" (formula "4") (term "1"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "var_2"))
      (rule "assignmentSubtractionInt" (formula "4") (term "1"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "translateJavaSubInt" (formula "4") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "4") (term "0,1,0"))
      (rule "mul_literals" (formula "4") (term "1,0,1,0"))
      (rule "polySimp_addComm1" (formula "4") (term "0,1,0"))
      (rule "add_literals" (formula "4") (term "0,0,1,0"))
      (rule "methodCallWithAssignmentWithinClass" (formula "4") (term "1") (inst "#v0=x_14"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_14"))
      (rule "variableDeclarationAssign" (formula "4") (term "1"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_15"))
      (rule "assignment" (formula "4") (term "1"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_factorial_1,savedHeapBefore_factorial_1"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "ifElseUnfold" (formula "4") (term "1") (inst "#boolv=x_16"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_16"))
      (rule "less_equal_than_comparison_simple" (formula "4") (term "1"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,1,0"))
      (rule "mul_literals" (formula "4") (term "1,0,0,1,0"))
      (rule "ifElseSplit" (formula "4"))
      (branch "if x_16 true"
         (builtin "One Step Simplification" (formula "5"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
         (rule "leq_literals" (formula "3") (term "0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "3"))
         (rule "true_left" (formula "3"))
         (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "2"))
         (rule "add_literals" (formula "4") (term "0,1,0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "leq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "3") (term "1,0,1,0,0") (ifseqformula "1"))
         (rule "add_literals" (formula "3") (term "0,1,0,0"))
         (rule "methodCallReturn" (formula "3") (term "1"))
         (rule "assignment" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "methodCallEmpty" (formula "3") (term "1"))
         (rule "blockEmpty" (formula "3") (term "1"))
         (rule "assignment" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "blockEmpty" (formula "3") (term "1"))
         (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0"))
         (rule "methodCallReturn" (formula "3") (term "1"))
         (rule "assignment" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "methodCallEmpty" (formula "3") (term "1"))
         (rule "blockEmpty" (formula "3") (term "1"))
         (rule "assignment" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "blockEmpty" (formula "3") (term "1"))
         (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0"))
         (rule "methodCallReturn" (formula "3") (term "1"))
         (rule "assignment" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "methodCallEmpty" (formula "3") (term "1"))
         (rule "blockEmpty" (formula "3") (term "1"))
         (rule "assignment" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "blockEmpty" (formula "3") (term "1"))
         (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0"))
         (rule "emptyModality" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "eqSymm" (formula "3") (term "1"))
         (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
         (builtin "Evaluate Query" (formula "3") (term "0") (newnames "x_90,callee,queryResult_1,res_factorial_1"))
         (rule "replaceKnownQuery_Helper_factorial(heap,Z(3(#)))_011_0" (formula "4") (term "0"))
         (rule "notLeft" (formula "1"))
         (rule "eqSymm" (formula "3") (term "0,0,1"))
         (rule "variableDeclaration" (formula "3") (term "1") (newnames "queryResult_1"))
         (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x"))
         (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_91"))
         (rule "variableDeclarationAssign" (formula "3") (term "1"))
         (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_92"))
         (rule "assignment" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_15,savedHeapBefore_factorial_15"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_93"))
         (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_93"))
         (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "leq_literals" (formula "3") (term "0,0,1,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "ifElseSplit" (formula "3"))
         (branch "if x_93 true"
            (builtin "One Step Simplification" (formula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_93 false"
            (builtin "One Step Simplification" (formula "4"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_93"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_94"))
            (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_96") (inst "#v0=x_95"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_95"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_96"))
            (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_14"))
            (rule "assignmentSubtractionInt" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
            (rule "sub_literals" (formula "3") (term "0,1,0"))
            (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_97"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_97"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_98"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_16,savedHeapBefore_factorial_16"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_99"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_99"))
            (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "leq_literals" (formula "3") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "ifElseSplit" (formula "3"))
            (branch "if x_99 true"
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_99 false"
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_99"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_100"))
               (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_102") (inst "#v0=x_101"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_101"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_102"))
               (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_15"))
               (rule "assignmentSubtractionInt" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
               (rule "sub_literals" (formula "3") (term "0,1,0"))
               (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_103"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_103"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_104"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_17,savedHeapBefore_factorial_17"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_105"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_105"))
               (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "leq_literals" (formula "3") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "ifElseSplit" (formula "3"))
               (branch "if x_105 true"
                  (builtin "One Step Simplification" (formula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_105 false"
                  (builtin "One Step Simplification" (formula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_105"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_106"))
                  (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_108") (inst "#v0=x_107"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_107"))
                  (rule "assignment" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_108"))
                  (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_16"))
                  (rule "assignmentSubtractionInt" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
                  (rule "sub_literals" (formula "3") (term "0,1,0"))
                  (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_109"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_109"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_110"))
                  (rule "assignment" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_18,savedHeapBefore_factorial_18"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_111"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_111"))
                  (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "leq_literals" (formula "3") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "ifElseSplit" (formula "3"))
                  (branch "if x_111 true"
                     (builtin "One Step Simplification" (formula "4"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "methodCallReturn" (formula "3") (term "1"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "methodCallEmpty" (formula "3") (term "1"))
                     (rule "blockEmpty" (formula "3") (term "1"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "blockEmpty" (formula "3") (term "1"))
                     (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "methodCallReturn" (formula "3") (term "1"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "methodCallEmpty" (formula "3") (term "1"))
                     (rule "blockEmpty" (formula "3") (term "1"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "blockEmpty" (formula "3") (term "1"))
                     (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "methodCallReturn" (formula "3") (term "1"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "methodCallEmpty" (formula "3") (term "1"))
                     (rule "blockEmpty" (formula "3") (term "1"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "blockEmpty" (formula "3") (term "1"))
                     (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "methodCallReturn" (formula "3") (term "1"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "methodCallEmpty" (formula "3") (term "1"))
                     (rule "blockEmpty" (formula "3") (term "1"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "methodCallEmpty" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "emptyModality" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                     (rule "closeTrue" (formula "3"))
                  )
                  (branch "if x_111 false"
                     (builtin "One Step Simplification" (formula "4"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
      )
      (branch "if x_16 false"
         (builtin "One Step Simplification" (formula "5"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "4"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
         (rule "leq_literals" (formula "2") (term "0"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "true_left" (formula "2"))
         (rule "returnUnfold" (formula "4") (term "1") (inst "#v0=x_16"))
         (rule "variableDeclarationAssign" (formula "4") (term "1"))
         (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_17"))
         (rule "compound_multiplication_2" (formula "4") (term "1") (inst "#v1=x_19") (inst "#v0=x_18"))
         (rule "variableDeclarationAssign" (formula "4") (term "1"))
         (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_18"))
         (rule "assignment" (formula "4") (term "1"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "variableDeclarationAssign" (formula "4") (term "1"))
         (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_19"))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "4") (term "1"))
         (rule "variableDeclarationAssign" (formula "4") (term "1"))
         (rule "variableDeclaration" (formula "4") (term "1") (newnames "var_3"))
         (rule "assignmentSubtractionInt" (formula "4") (term "1"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "translateJavaSubInt" (formula "4") (term "0,1,0"))
         (rule "polySimp_elimSub" (formula "4") (term "0,1,0"))
         (rule "mul_literals" (formula "4") (term "1,0,1,0"))
         (rule "polySimp_addComm1" (formula "4") (term "0,1,0"))
         (rule "add_literals" (formula "4") (term "0,0,1,0"))
         (rule "methodCallWithAssignmentWithinClass" (formula "4") (term "1") (inst "#v0=x_20"))
         (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_20"))
         (rule "variableDeclarationAssign" (formula "4") (term "1"))
         (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_21"))
         (rule "assignment" (formula "4") (term "1"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_factorial_2,savedHeapBefore_factorial_2"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "ifElseUnfold" (formula "4") (term "1") (inst "#boolv=x_22"))
         (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_22"))
         (rule "less_equal_than_comparison_simple" (formula "4") (term "1"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,1,0"))
         (rule "mul_literals" (formula "4") (term "1,0,0,1,0"))
         (rule "ifElseSplit" (formula "4"))
         (branch "if x_22 true"
            (builtin "One Step Simplification" (formula "5"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
            (rule "leq_literals" (formula "3") (term "0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
            (rule "applyEq" (formula "5") (term "0,0,0,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
            (rule "leq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "1"))
            (rule "add_literals" (formula "4") (term "0,1,0"))
            (rule "applyEq" (formula "4") (term "1,0,1,0,0") (ifseqformula "1"))
            (rule "add_literals" (formula "4") (term "0,1,0,0"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "applyEq" (formula "3") (term "1,0,1,0,0,0") (ifseqformula "1"))
            (rule "add_literals" (formula "3") (term "0,1,0,0,0"))
            (rule "applyEq" (formula "3") (term "0,1,0,0,0,0") (ifseqformula "1"))
            (rule "methodCallReturn" (formula "3") (term "1"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "methodCallEmpty" (formula "3") (term "1"))
            (rule "blockEmpty" (formula "3") (term "1"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "blockEmpty" (formula "3") (term "1"))
            (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0"))
            (rule "methodCallReturn" (formula "3") (term "1"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "methodCallEmpty" (formula "3") (term "1"))
            (rule "blockEmpty" (formula "3") (term "1"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "blockEmpty" (formula "3") (term "1"))
            (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0"))
            (rule "methodCallReturn" (formula "3") (term "1"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "methodCallEmpty" (formula "3") (term "1"))
            (rule "blockEmpty" (formula "3") (term "1"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "blockEmpty" (formula "3") (term "1"))
            (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0"))
            (rule "methodCallReturn" (formula "3") (term "1"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "methodCallEmpty" (formula "3") (term "1"))
            (rule "blockEmpty" (formula "3") (term "1"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "blockEmpty" (formula "3") (term "1"))
            (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0"))
            (rule "emptyModality" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "eqSymm" (formula "3") (term "1"))
            (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
            (builtin "Evaluate Query" (formula "3") (term "0") (newnames "x_62,callee,queryResult_0,res_factorial_0"))
            (rule "replaceKnownQuery_Helper_factorial(heap,Z(4(#)))_0111_0" (formula "4") (term "0"))
            (rule "notLeft" (formula "1"))
            (rule "eqSymm" (formula "3") (term "0,0,1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "queryResult_0"))
            (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_63"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_64"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_10,savedHeapBefore_factorial_10"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_65"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_65"))
            (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "leq_literals" (formula "3") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "ifElseSplit" (formula "3"))
            (branch "if x_65 true"
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_65 false"
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_65"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_66"))
               (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_68") (inst "#v0=x_67"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_67"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_68"))
               (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_10"))
               (rule "assignmentSubtractionInt" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
               (rule "sub_literals" (formula "3") (term "0,1,0"))
               (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_69"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_69"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_70"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_11,savedHeapBefore_factorial_11"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_71"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_71"))
               (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "leq_literals" (formula "3") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "ifElseSplit" (formula "3"))
               (branch "if x_71 true"
                  (builtin "One Step Simplification" (formula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_71 false"
                  (builtin "One Step Simplification" (formula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_71"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_72"))
                  (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_74") (inst "#v0=x_73"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_73"))
                  (rule "assignment" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_74"))
                  (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_11"))
                  (rule "assignmentSubtractionInt" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
                  (rule "sub_literals" (formula "3") (term "0,1,0"))
                  (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_75"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_75"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_76"))
                  (rule "assignment" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_12,savedHeapBefore_factorial_12"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_77"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_77"))
                  (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "leq_literals" (formula "3") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "ifElseSplit" (formula "3"))
                  (branch "if x_77 true"
                     (builtin "One Step Simplification" (formula "4"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_77 false"
                     (builtin "One Step Simplification" (formula "4"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_77"))
                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_78"))
                     (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_80") (inst "#v0=x_79"))
                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_79"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_80"))
                     (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_12"))
                     (rule "assignmentSubtractionInt" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
                     (rule "sub_literals" (formula "3") (term "0,1,0"))
                     (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_81"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_81"))
                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_82"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_13,savedHeapBefore_factorial_13"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_83"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_83"))
                     (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "leq_literals" (formula "3") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "ifElseSplit" (formula "3"))
                     (branch "if x_83 true"
                        (builtin "One Step Simplification" (formula "4"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_83 false"
                        (builtin "One Step Simplification" (formula "4"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_83"))
                        (rule "variableDeclarationAssign" (formula "3") (term "1"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_84"))
                        (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_86") (inst "#v0=x_85"))
                        (rule "variableDeclarationAssign" (formula "3") (term "1"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_85"))
                        (rule "assignment" (formula "3") (term "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "variableDeclarationAssign" (formula "3") (term "1"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_86"))
                        (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
                        (rule "variableDeclarationAssign" (formula "3") (term "1"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_13"))
                        (rule "assignmentSubtractionInt" (formula "3") (term "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
                        (rule "sub_literals" (formula "3") (term "0,1,0"))
                        (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_87"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_87"))
                        (rule "variableDeclarationAssign" (formula "3") (term "1"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_88"))
                        (rule "assignment" (formula "3") (term "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_14,savedHeapBefore_factorial_14"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_89"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_89"))
                        (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "leq_literals" (formula "3") (term "0,0,1,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "ifElseSplit" (formula "3"))
                        (branch "if x_89 true"
                           (builtin "One Step Simplification" (formula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "methodCallReturn" (formula "3") (term "1"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "methodCallEmpty" (formula "3") (term "1"))
                           (rule "blockEmpty" (formula "3") (term "1"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "blockEmpty" (formula "3") (term "1"))
                           (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "methodCallReturn" (formula "3") (term "1"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "methodCallEmpty" (formula "3") (term "1"))
                           (rule "blockEmpty" (formula "3") (term "1"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "blockEmpty" (formula "3") (term "1"))
                           (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "methodCallReturn" (formula "3") (term "1"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "methodCallEmpty" (formula "3") (term "1"))
                           (rule "blockEmpty" (formula "3") (term "1"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "blockEmpty" (formula "3") (term "1"))
                           (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "methodCallReturn" (formula "3") (term "1"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "methodCallEmpty" (formula "3") (term "1"))
                           (rule "blockEmpty" (formula "3") (term "1"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "blockEmpty" (formula "3") (term "1"))
                           (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "methodCallReturn" (formula "3") (term "1"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "methodCallEmpty" (formula "3") (term "1"))
                           (rule "blockEmpty" (formula "3") (term "1"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "methodCallEmpty" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "emptyModality" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                           (rule "closeTrue" (formula "3"))
                        )
                        (branch "if x_89 false"
                           (builtin "One Step Simplification" (formula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
            )
         )
         (branch "if x_22 false"
            (builtin "One Step Simplification" (formula "5"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_leqRight" (formula "4"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
            (rule "leq_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
            (rule "applyEq" (formula "5") (term "1,0,1,0,0,0,0") (ifseqformula "1"))
            (rule "add_literals" (formula "5") (term "0,1,0,0,0,0"))
            (rule "applyEq" (formula "5") (term "1,0,1,0,0,0") (ifseqformula "1"))
            (rule "add_literals" (formula "5") (term "0,1,0,0,0"))
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
            (rule "leq_literals" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "1"))
            (rule "add_literals" (formula "4") (term "0,1,0"))
            (rule "applyEq" (formula "4") (term "1,0,1,0,0") (ifseqformula "1"))
            (rule "add_literals" (formula "4") (term "0,1,0,0"))
            (rule "applyEq" (formula "4") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "4") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_22"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_23"))
            (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_25") (inst "#v0=x_24"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_24"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_25"))
            (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_4"))
            (rule "assignmentSubtractionInt" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
            (rule "sub_literals" (formula "3") (term "0,1,0"))
            (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_26"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_26"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_27"))
            (rule "assignment" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_3,savedHeapBefore_factorial_3"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_28"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_28"))
            (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "leq_literals" (formula "3") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "ifElseSplit" (formula "3"))
            (branch "if x_28 true"
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "methodCallReturn" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodCallEmpty" (formula "3") (term "1"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0"))
               (rule "methodCallReturn" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodCallEmpty" (formula "3") (term "1"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0"))
               (rule "methodCallReturn" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodCallEmpty" (formula "3") (term "1"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0"))
               (rule "methodCallReturn" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodCallEmpty" (formula "3") (term "1"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0"))
               (rule "methodCallReturn" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodCallEmpty" (formula "3") (term "1"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "blockEmpty" (formula "3") (term "1"))
               (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0"))
               (rule "emptyModality" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "eqSymm" (formula "3") (term "1"))
               (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
               (builtin "Evaluate Query" (formula "3") (term "0") (newnames "x_0,callee,queryResult,res_factorial"))
               (rule "replaceKnownQuery_Helper_factorial(heap,Z(5(#)))_01111_0" (formula "4") (term "0"))
               (rule "notLeft" (formula "1"))
               (rule "eqSymm" (formula "3") (term "0,0,1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "queryResult"))
               (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_29"))
               (rule "variableDeclarationAssign" (formula "3") (term "1"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_30"))
               (rule "assignment" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_4,savedHeapBefore_factorial_4"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_31"))
               (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_31"))
               (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "leq_literals" (formula "3") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "ifElseSplit" (formula "3"))
               (branch "if x_31 true"
                  (builtin "One Step Simplification" (formula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_31 false"
                  (builtin "One Step Simplification" (formula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_31"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_32"))
                  (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_34") (inst "#v0=x_33"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_33"))
                  (rule "assignment" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_34"))
                  (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_5"))
                  (rule "assignmentSubtractionInt" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
                  (rule "sub_literals" (formula "3") (term "0,1,0"))
                  (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_35"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_35"))
                  (rule "variableDeclarationAssign" (formula "3") (term "1"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_36"))
                  (rule "assignment" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_5,savedHeapBefore_factorial_5"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_37"))
                  (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_37"))
                  (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "leq_literals" (formula "3") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "ifElseSplit" (formula "3"))
                  (branch "if x_37 true"
                     (builtin "One Step Simplification" (formula "4"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_37 false"
                     (builtin "One Step Simplification" (formula "4"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_37"))
                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_38"))
                     (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_40") (inst "#v0=x_39"))
                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_39"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_40"))
                     (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_6"))
                     (rule "assignmentSubtractionInt" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
                     (rule "sub_literals" (formula "3") (term "0,1,0"))
                     (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_41"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_41"))
                     (rule "variableDeclarationAssign" (formula "3") (term "1"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_42"))
                     (rule "assignment" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_6,savedHeapBefore_factorial_6"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_43"))
                     (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_43"))
                     (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "leq_literals" (formula "3") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "ifElseSplit" (formula "3"))
                     (branch "if x_43 true"
                        (builtin "One Step Simplification" (formula "4"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_43 false"
                        (builtin "One Step Simplification" (formula "4"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_43"))
                        (rule "variableDeclarationAssign" (formula "3") (term "1"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_44"))
                        (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_46") (inst "#v0=x_45"))
                        (rule "variableDeclarationAssign" (formula "3") (term "1"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_45"))
                        (rule "assignment" (formula "3") (term "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "variableDeclarationAssign" (formula "3") (term "1"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_46"))
                        (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
                        (rule "variableDeclarationAssign" (formula "3") (term "1"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_7"))
                        (rule "assignmentSubtractionInt" (formula "3") (term "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
                        (rule "sub_literals" (formula "3") (term "0,1,0"))
                        (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_47"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_47"))
                        (rule "variableDeclarationAssign" (formula "3") (term "1"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_48"))
                        (rule "assignment" (formula "3") (term "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_7,savedHeapBefore_factorial_7"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_49"))
                        (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_49"))
                        (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "leq_literals" (formula "3") (term "0,0,1,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "ifElseSplit" (formula "3"))
                        (branch "if x_49 true"
                           (builtin "One Step Simplification" (formula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_49 false"
                           (builtin "One Step Simplification" (formula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_49"))
                           (rule "variableDeclarationAssign" (formula "3") (term "1"))
                           (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_50"))
                           (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_52") (inst "#v0=x_51"))
                           (rule "variableDeclarationAssign" (formula "3") (term "1"))
                           (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_51"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "variableDeclarationAssign" (formula "3") (term "1"))
                           (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_52"))
                           (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
                           (rule "variableDeclarationAssign" (formula "3") (term "1"))
                           (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_8"))
                           (rule "assignmentSubtractionInt" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
                           (rule "sub_literals" (formula "3") (term "0,1,0"))
                           (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_53"))
                           (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_53"))
                           (rule "variableDeclarationAssign" (formula "3") (term "1"))
                           (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_54"))
                           (rule "assignment" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_8,savedHeapBefore_factorial_8"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_55"))
                           (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_55"))
                           (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "leq_literals" (formula "3") (term "0,0,1,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "ifElseSplit" (formula "3"))
                           (branch "if x_55 true"
                              (builtin "One Step Simplification" (formula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_55 false"
                              (builtin "One Step Simplification" (formula "4"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "returnUnfold" (formula "3") (term "1") (inst "#v0=x_55"))
                              (rule "variableDeclarationAssign" (formula "3") (term "1"))
                              (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_56"))
                              (rule "compound_multiplication_2" (formula "3") (term "1") (inst "#v1=x_58") (inst "#v0=x_57"))
                              (rule "variableDeclarationAssign" (formula "3") (term "1"))
                              (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_57"))
                              (rule "assignment" (formula "3") (term "1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "variableDeclarationAssign" (formula "3") (term "1"))
                              (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_58"))
                              (rule "methodCallWithAssignmentUnfoldArguments" (formula "3") (term "1"))
                              (rule "variableDeclarationAssign" (formula "3") (term "1"))
                              (rule "variableDeclaration" (formula "3") (term "1") (newnames "var_9"))
                              (rule "assignmentSubtractionInt" (formula "3") (term "1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "translateJavaSubInt" (formula "3") (term "0,1,0"))
                              (rule "sub_literals" (formula "3") (term "0,1,0"))
                              (rule "methodCallWithAssignmentWithinClass" (formula "3") (term "1") (inst "#v0=x_59"))
                              (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_59"))
                              (rule "variableDeclarationAssign" (formula "3") (term "1"))
                              (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_60"))
                              (rule "assignment" (formula "3") (term "1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_factorial_9,savedHeapBefore_factorial_9"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "ifElseUnfold" (formula "3") (term "1") (inst "#boolv=x_61"))
                              (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_61"))
                              (rule "less_equal_than_comparison_simple" (formula "3") (term "1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "leq_literals" (formula "3") (term "0,0,1,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "ifElseSplit" (formula "3"))
                              (branch "if x_61 true"
                                 (builtin "One Step Simplification" (formula "4"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "methodCallReturn" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "methodCallEmpty" (formula "3") (term "1"))
                                 (rule "blockEmpty" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "blockEmpty" (formula "3") (term "1"))
                                 (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "methodCallReturn" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "methodCallEmpty" (formula "3") (term "1"))
                                 (rule "blockEmpty" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "blockEmpty" (formula "3") (term "1"))
                                 (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "methodCallReturn" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "methodCallEmpty" (formula "3") (term "1"))
                                 (rule "blockEmpty" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "blockEmpty" (formula "3") (term "1"))
                                 (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "methodCallReturn" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "methodCallEmpty" (formula "3") (term "1"))
                                 (rule "blockEmpty" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "blockEmpty" (formula "3") (term "1"))
                                 (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "methodCallReturn" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "methodCallEmpty" (formula "3") (term "1"))
                                 (rule "blockEmpty" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "blockEmpty" (formula "3") (term "1"))
                                 (rule "assignmentMultiplicationInt" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "translateJavaMulInt" (formula "3") (term "0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "methodCallReturn" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "methodCallEmpty" (formula "3") (term "1"))
                                 (rule "blockEmpty" (formula "3") (term "1"))
                                 (rule "assignment" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "methodCallEmpty" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "emptyModality" (formula "3") (term "1"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                 (rule "closeTrue" (formula "3"))
                              )
                              (branch "if x_61 false"
                                 (builtin "One Step Simplification" (formula "4"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "if x_28 false"
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
   )
)
)

}
//statementid:{1c978aff-4acc-444b-acb4-3c5e7a511b51}
//modifiable:{f}