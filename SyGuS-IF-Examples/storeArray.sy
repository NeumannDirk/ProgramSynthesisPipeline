(set-logic ALL)

(synth-fun storeArray ((a (Array Int Int)) (i Int) (j Int)) (Array Int Int)
    ((Start (Array Int Int)) (StartInt Int) (StartBool Bool))
	(
		(Start (Array Int Int)
			(
			a
			(store a StartInt StartInt)
			)
		)
		(StartInt Int 
			(0 
			1 
			i
			j
			(+ StartInt StartInt)
            (- StartInt StartInt)
            (ite StartBool StartInt StartInt)
			(select a StartInt)
			)
		)
		(StartBool Bool 
			((and StartBool StartBool)
            (not StartBool)
            (<= StartInt StartInt)
			)
		)
	)
)

(declare-var arr (Array Int Int))
(declare-var inx Int)
(declare-var val Int)

;This is just a little test to check if a store call can be synthesized
(constraint (= (select (storeArray arr inx val) inx) val))

(check-synth)