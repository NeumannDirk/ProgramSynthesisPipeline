\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Feb 14 18:57:24 CET 2024
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Users/DirkNeumann/eclipse-workspaces/runtime-EclipseApplication/de.tu_bs.cs.isf.corc.examples";
\include "helper.key";
\programVariables {
int n;
int l;
int N;
int n;
int l;
int N;
int N_old;
Heap heapAtPre;
}\problem {
     geq(N, mul(n, Helper::pow(heap, Z(2(#)), l)))
   & lt(N,
        mul(add(n, Z(1(#))),
            Helper::pow(heap, Z(2(#)), l)))
   & !n = Z(1(#))
   & gt(N, Z(0(#)))
   & leq(n, N)
   & geq(n, Z(1(#)))
   & geq(l, Z(0(#)))
   & lt(l, N)
   & lt(N, Z(0(2(#))))
   & wellFormed(heap)
-> {heapAtPre:=heap || N_old:=N}
     \<{
         n=n/2;
         l=l+1;
       }\> (  geq(N,
                  mul(n, Helper::pow(heap, Z(2(#)), l)))
            & lt(N,
                 mul(add(n, Z(1(#))),
                     Helper::pow(heap, Z(2(#)), l)))
            & N = N_old)

}

\proof {
(keyLog "0" (keyUser "DirkNeumann" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "4351")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "eqSymm" (formula "11") (term "1,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "2") (term "1"))
(rule "polySimp_mulComm0" (formula "1") (term "1"))
(rule "polySimp_addComm0" (formula "11") (term "1,1,1,0,0,1"))
(rule "polySimp_addComm0" (formula "2") (term "1,1"))
(rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
(rule "polySimp_elimOne" (formula "11") (term "0,1,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1"))
(rule "polySimp_rightDist" (formula "2") (term "1"))
(rule "polySimp_elimOne" (formula "2") (term "0,1"))
(rule "polySimp_mulComm0" (formula "2") (term "1,1"))
(rule "inEqSimp_ltToLeq" (formula "8"))
(rule "mul_literals" (formula "8") (term "1,0,0"))
(rule "add_literals" (formula "8") (term "0,0"))
(rule "inEqSimp_ltToLeq" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
(rule "inEqSimp_gtToGeq" (formula "3"))
(rule "times_zero_1" (formula "3") (term "1,0,0"))
(rule "add_zero_right" (formula "3") (term "0,0"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1"))
(rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1"))
(rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,1,0,0,1"))
(rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1"))
(rule "polySimp_addComm1" (formula "11") (term "0,1,0,0,1"))
(rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "2"))
(rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
(rule "polySimp_addAssoc" (formula "2") (term "0,0"))
(rule "polySimp_addComm1" (formula "2") (term "0"))
(rule "polySimp_addComm1" (formula "2") (term "0,0"))
(rule "inEqSimp_commuteGeq" (formula "11") (term "0,0,0,1"))
(rule "inEqSimp_commuteGeq" (formula "1"))
(rule "inEqSimp_sepPosMonomial0" (formula "8"))
(rule "mul_literals" (formula "8") (term "1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1"))
(rule "polySimp_rightDist" (formula "7") (term "1"))
(rule "mul_literals" (formula "7") (term "0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "3"))
(rule "mul_literals" (formula "3") (term "1"))
(rule "inEqSimp_sepNegMonomial0" (formula "11") (term "1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,1"))
(rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "2"))
(rule "polySimp_mulLiterals" (formula "2") (term "0"))
(rule "polySimp_elimOne" (formula "2") (term "0"))
(rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "10"))
(rule "add_literals" (formula "5") (term "1"))
(rule "inEqSimp_contradEq7" (formula "10") (ifseqformula "5"))
(rule "mul_literals" (formula "10") (term "1,0,0"))
(rule "add_literals" (formula "10") (term "0,0"))
(rule "leq_literals" (formula "10") (term "0"))
(builtin "One Step Simplification" (formula "10"))
(rule "false_right" (formula "10"))
(rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
(rule "times_zero_1" (formula "6") (term "0,0"))
(rule "add_zero_left" (formula "6") (term "0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6"))
(rule "mul_literals" (formula "6") (term "1"))
(rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
(rule "polySimp_rightDist" (formula "2") (term "0,0"))
(rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
(rule "polySimp_elimOne" (formula "2") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "2") (term "0"))
(rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
(rule "mul_literals" (formula "2") (term "0,0,0,0"))
(rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
(rule "add_literals" (formula "2") (term "1,1,0,0"))
(rule "times_zero_1" (formula "2") (term "1,0,0"))
(rule "add_zero_right" (formula "2") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "2"))
(rule "mul_literals" (formula "2") (term "1"))
(rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "5"))
(rule "mul_literals" (formula "6") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6"))
(rule "mul_literals" (formula "6") (term "1"))
(rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "6"))
(rule "leq_literals" (formula "4") (term "0"))
(builtin "One Step Simplification" (formula "4"))
(rule "true_left" (formula "4"))
(rule "assignmentDivisionInt" (formula "11"))
(branch
   (builtin "One Step Simplification" (formula "11"))
   (rule "translateJavaDivInt" (formula "11") (term "0,1,0"))
   (rule "assignmentAdditionInt" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "translateJavaAddInt" (formula "11") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "11") (term "0,1,0"))
   (rule "emptyModality" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "jdiv_axiom" (formula "11") (term "1,0,1"))
   (rule "eqSymm" (formula "1"))
   (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "7"))
   (rule "leq_literals" (formula "1") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "eqSymm" (formula "1"))
   (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "12") (term "1,0,1") (ifseqformula "1"))
   (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
   (rule "qeq_literals" (formula "1") (term "0,1,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "equal_literals" (formula "1") (term "0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1,1,1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "polySimp_addComm1" (formula "3") (term "1"))
   (rule "add_literals" (formula "3") (term "0,1"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "inEqSimp_homoInEq1" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
   (rule "polySimp_addComm1" (formula "3") (term "0"))
   (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "1"))
   (rule "applyEq" (formula "15") (term "1,0,1") (ifseqformula "1"))
   (rule "applyEq" (formula "4") (term "1") (ifseqformula "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
   (rule "polySimp_mulComm0" (formula "3") (term "1"))
   (rule "polySimp_rightDist" (formula "3") (term "1"))
   (rule "mul_literals" (formula "3") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
   (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
   (rule "mul_literals" (formula "10") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0"))
   (rule "add_literals" (formula "10") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10"))
   (rule "mul_literals" (formula "10") (term "1"))
   (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
   (rule "leq_literals" (formula "10") (term "0,0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
   (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
   (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0"))
   (rule "add_zero_right" (formula "10") (term "0,0"))
   (rule "leq_literals" (formula "10") (term "0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "8"))
   (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1"))
   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "15"))
   (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
   (rule "polySimp_addComm0" (formula "2") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
   (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(9(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
   (rule "leq_literals" (formula "2") (term "0,0"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
   (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
   (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
   (rule "add_literals" (formula "2") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
   (rule "add_literals" (formula "2") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "2") (term "1,0,0"))
   (rule "add_zero_right" (formula "2") (term "0,0"))
   (rule "qeq_literals" (formula "2") (term "0"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "andRight" (formula "18"))
   (branch
      (rule "inEqSimp_leqRight" (formula "18"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (builtin "Evaluate Query" (formula "8") (term "0,0") (newnames "a_6,b_6,callee,queryResult_1,res_pow_1"))
      (rule "replaceKnownQuery_Helper_pow(heap,Z(2(#)),l)_00_0" (formula "10") (term "0"))
      (rule "replaceKnownQuery_Helper_pow(heap,Z(2(#)),l)_00_0" (formula "9") (term "0,0"))
      (rule "replaceKnownQuery_Helper_pow(heap,Z(2(#)),l)_00_0" (formula "11") (term "0,0"))
      (rule "replaceKnownQuery_Helper_pow(heap,Z(2(#)),l)_00_0" (formula "11") (term "0,1,1"))
      (rule "notLeft" (formula "1"))
      (rule "eqSymm" (formula "19") (term "0,0,1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "queryResult_1"))
      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "8"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
      (rule "add_literals" (formula "10") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
      (rule "mul_literals" (formula "10") (term "1"))
      (builtin "Evaluate Query" (formula "1") (term "0,0") (newnames "a_7,b_7,callee,queryResult_2,res_pow_2"))
      (rule "replaceKnownQuery_Helper_pow(heap,Z(2(#)),add(Z(1(#)),l))_00_1" (formula "2") (term "0,0"))
      (rule "notLeft" (formula "1"))
      (rule "eqSymm" (formula "19") (term "0,0,1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "queryResult_2"))
      (rule "methodCallWithAssignmentWithinClass" (formula "20") (term "1") (inst "#v0=x"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_186"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_8"))
      (rule "assignment" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_8"))
      (rule "assignment" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_pow_4,savedHeapBefore_pow_4"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_187"))
      (rule "equality_comparison_simple" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "ifSplit" (formula "20"))
      (branch "if x_187 true"
         (builtin "One Step Simplification" (formula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "applyEq" (formula "19") (term "1,0,1,1,0") (ifseqformula "1"))
         (rule "add_zero_right" (formula "19") (term "0,1,1,0"))
         (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "16"))
         (rule "times_zero_2" (formula "16") (term "1,0"))
         (rule "add_zero_right" (formula "16") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
         (rule "mul_literals" (formula "16") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "13"))
         (rule "leq_literals" (formula "16") (term "0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "methodCallReturn" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "assignment" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "methodCallEmpty" (formula "19") (term "1"))
         (rule "blockEmpty" (formula "19") (term "1"))
         (rule "assignment" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "methodCallEmpty" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "emptyModality" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "notRight" (formula "19"))
         (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
         (rule "polySimp_elimOneLeft0" (formula "12") (term "0"))
         (rule "inEqSimp_homoInEq1" (formula "12"))
         (rule "polySimp_addComm1" (formula "12") (term "0"))
         (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "1"))
         (rule "polySimp_elimOneLeft0" (formula "10") (term "0"))
         (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "applyEqRigid" (formula "10") (term "0,1,0") (ifseqformula "1"))
         (rule "mul_literals" (formula "10") (term "1,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0"))
         (rule "polySimp_elimOne" (formula "10") (term "0"))
         (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "11"))
         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "10"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "10"))
         (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
         (rule "applyEq" (formula "11") (term "0") (ifseqformula "9"))
         (rule "inEqSimp_homoInEq0" (formula "11"))
         (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
         (rule "add_literals" (formula "11") (term "1,0"))
         (rule "times_zero_1" (formula "11") (term "0"))
         (rule "qeq_literals" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
         (rule "inEqSimp_homoInEq1" (formula "10"))
         (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
         (rule "add_literals" (formula "10") (term "1,0"))
         (rule "times_zero_1" (formula "10") (term "0"))
         (rule "leq_literals" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "applyEq" (formula "12") (term "0") (ifseqformula "9"))
         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "7"))
         (rule "mul_literals" (formula "10") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0"))
         (rule "add_literals" (formula "10") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1"))
         (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "12"))
         (rule "greater_literals" (formula "10") (term "0,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1,0"))
         (rule "leq_literals" (formula "10") (term "0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "div_axiom" (formula "4") (term "0") (inst "quotient=quotient_2"))
         (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
         (rule "equal_literals" (formula "4") (term "0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "qeq_literals" (formula "4") (term "0,1"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "andLeft" (formula "4"))
         (rule "andLeft" (formula "4"))
         (rule "polySimp_addComm1" (formula "6") (term "1"))
         (rule "add_literals" (formula "6") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "inEqSimp_homoInEq1" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
         (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "4"))
         (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "4"))
         (rule "applyEqRigid" (formula "9") (term "0,1") (ifseqformula "4"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "4"))
         (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "4"))
         (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
         (rule "inEqSimp_sepPosMonomial0" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "1"))
         (rule "polySimp_rightDist" (formula "6") (term "1"))
         (rule "mul_literals" (formula "6") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "13"))
         (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
         (rule "polySimp_addComm0" (formula "5") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "5"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
         (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "8"))
         (rule "mul_literals" (formula "5") (term "0,1,0"))
         (rule "greater_literals" (formula "5") (term "0,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "leq_literals" (formula "5") (term "0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
         (rule "mul_literals" (formula "11") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0"))
         (rule "add_literals" (formula "11") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
         (rule "mul_literals" (formula "11") (term "1"))
         (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "13"))
         (rule "greater_literals" (formula "11") (term "0,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "mul_literals" (formula "11") (term "1,0"))
         (rule "leq_literals" (formula "11") (term "0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "jdiv_axiom" (formula "9") (term "0"))
         (rule "eqSymm" (formula "9"))
         (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "6"))
         (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "polySimp_homoEq" (formula "9") (term "1"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
         (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
         (rule "polySimp_sepPosMonomial" (formula "9") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "12"))
         (rule "leq_literals" (formula "9") (term "0,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "methodCallWithAssignmentWithinClass" (formula "15") (term "1") (inst "#v0=x"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_367"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_12"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "b_12"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_pow_8,savedHeapBefore_pow_8"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_368"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_368"))
         (rule "equality_comparison_simple" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "equal_literals" (formula "15") (term "0,0,1,0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "ifSplit" (formula "15"))
         (branch "if x_368 true"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_368 false"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "res_9"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "for_to_while" (formula "15") (term "1") (inst "#outerLabel=_label129") (inst "#innerLabel=_label128"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "i_9"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "loopUnwind" (formula "15") (term "1") (inst "#outerLabel=_label131") (inst "#innerLabel=_label130"))
            (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_368"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_369"))
            (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_371") (inst "#v0=x_370"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_370"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_371"))
            (rule "assignmentSubtractionInt" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
            (rule "sub_literals" (formula "15") (term "0,1,0"))
            (rule "less_than_comparison_simple" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "less_literals" (formula "15") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "ifSplit" (formula "15"))
            (branch "if x_369 true"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_369 false"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "blockEmpty" (formula "15") (term "1"))
               (rule "methodCallReturn" (formula "15") (term "1"))
               (rule "assignment" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "methodCallEmpty" (formula "15") (term "1"))
               (rule "blockEmpty" (formula "15") (term "1"))
               (rule "assignment" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "methodCallEmpty" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "emptyModality" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "notRight" (formula "15"))
               (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "4") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "mul_literals" (formula "4") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "4"))
               (rule "andLeft" (formula "6"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "leq_literals" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
         )
      )
      (branch "if x_187 false"
         (builtin "One Step Simplification" (formula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "variableDeclarationAssign" (formula "21") (term "1"))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "res_5"))
         (rule "assignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "19"))
         (rule "add_zero_right" (formula "15") (term "1"))
         (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "15"))
         (rule "times_zero_1" (formula "19") (term "1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0"))
         (rule "leq_literals" (formula "19") (term "0"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "false_right" (formula "19"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
         (rule "mul_literals" (formula "15") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0"))
         (rule "add_literals" (formula "15") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
         (rule "mul_literals" (formula "15") (term "1"))
         (rule "for_to_while" (formula "20") (term "1") (inst "#outerLabel=_label67") (inst "#innerLabel=_label66"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_5"))
         (rule "assignment" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label69") (inst "#innerLabel=_label68"))
         (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_188"))
         (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_190") (inst "#v0=x_189"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_189"))
         (rule "assignment" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_190"))
         (rule "assignmentSubtractionInt" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
         (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
         (rule "mul_literals" (formula "20") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
         (rule "less_than_comparison_simple" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
         (rule "add_zero_right" (formula "20") (term "0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
         (rule "ifSplit" (formula "20"))
         (branch "if x_188 true"
            (builtin "One Step Simplification" (formula "21"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
            (rule "leq_literals" (formula "16") (term "0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
            (rule "mul_literals" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
            (rule "leq_literals" (formula "14") (term "0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "compound_assignment_op_mul" (formula "20") (term "1"))
            (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_203"))
            (rule "remove_parentheses_right" (formula "20") (term "1"))
            (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_205") (inst "#v0=x_204"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_204"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_205"))
            (rule "remove_parentheses_right" (formula "20") (term "1"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "20") (term "1"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "blockEmpty" (formula "20") (term "1"))
            (rule "postincrement" (formula "20") (term "1"))
            (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_206"))
            (rule "remove_parentheses_right" (formula "20") (term "1"))
            (rule "assignmentAdditionInt" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
            (rule "add_zero_left" (formula "20") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "20") (term "1"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "blockEmpty" (formula "20") (term "1"))
            (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label77") (inst "#innerLabel=_label76"))
            (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_207"))
            (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_209") (inst "#v0=x_208"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_208"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_209"))
            (rule "assignmentSubtractionInt" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
            (rule "mul_literals" (formula "20") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
            (rule "less_than_comparison_simple" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
            (rule "ifSplit" (formula "20"))
            (branch "if x_207 true"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
               (rule "leq_literals" (formula "3") (term "0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
               (rule "leq_literals" (formula "3") (term "0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "compound_assignment_op_mul" (formula "20") (term "1"))
               (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_229"))
               (rule "remove_parentheses_right" (formula "20") (term "1"))
               (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_231") (inst "#v0=x_230"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_230"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_231"))
               (rule "remove_parentheses_right" (formula "20") (term "1"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "20") (term "1"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "blockEmpty" (formula "20") (term "1"))
               (rule "postincrement" (formula "20") (term "1"))
               (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_232"))
               (rule "remove_parentheses_right" (formula "20") (term "1"))
               (rule "assignmentAdditionInt" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
               (rule "add_literals" (formula "20") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "20") (term "1"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "blockEmpty" (formula "20") (term "1"))
               (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label87") (inst "#innerLabel=_label86"))
               (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_233"))
               (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_235") (inst "#v0=x_234"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_234"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_235"))
               (rule "assignmentSubtractionInt" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
               (rule "mul_literals" (formula "20") (term "1,0,1,0"))
               (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
               (rule "less_than_comparison_simple" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
               (rule "ifSplit" (formula "20"))
               (branch "if x_233 true"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                  (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_262"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_264") (inst "#v0=x_263"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_263"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_264"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "postincrement" (formula "20") (term "1"))
                  (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_265"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "assignmentAdditionInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                  (rule "add_literals" (formula "20") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label99") (inst "#innerLabel=_label98"))
                  (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_266"))
                  (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_268") (inst "#v0=x_267"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_267"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_268"))
                  (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                  (rule "less_than_comparison_simple" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                  (rule "ifSplit" (formula "20"))
                  (branch "if x_266 true"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                     (rule "mul_literals" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                     (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_269"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_271") (inst "#v0=x_270"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_270"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_271"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "postincrement" (formula "20") (term "1"))
                     (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_272"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "assignmentAdditionInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label101") (inst "#innerLabel=_label100"))
                     (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_273"))
                     (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_275") (inst "#v0=x_274"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_274"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_275"))
                     (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                     (rule "less_than_comparison_simple" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                     (rule "ifSplit" (formula "20"))
                     (branch "if x_273 true"
                        (builtin "One Step Simplification" (formula "21"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                        (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_276"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_278") (inst "#v0=x_277"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_277"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_278"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "blockEmpty" (formula "20") (term "1"))
                        (rule "postincrement" (formula "20") (term "1"))
                        (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_279"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "assignmentAdditionInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                        (rule "add_literals" (formula "20") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "blockEmpty" (formula "20") (term "1"))
                        (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label103") (inst "#innerLabel=_label102"))
                        (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_280"))
                        (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_282") (inst "#v0=x_281"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_281"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_282"))
                        (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                        (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                        (rule "less_than_comparison_simple" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                        (rule "ifSplit" (formula "20"))
                        (branch "if x_280 true"
                           (builtin "One Step Simplification" (formula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                           (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_283"))
                           (rule "remove_parentheses_right" (formula "20") (term "1"))
                           (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_285") (inst "#v0=x_284"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_284"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_285"))
                           (rule "remove_parentheses_right" (formula "20") (term "1"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "20") (term "1"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "blockEmpty" (formula "20") (term "1"))
                           (rule "postincrement" (formula "20") (term "1"))
                           (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_286"))
                           (rule "remove_parentheses_right" (formula "20") (term "1"))
                           (rule "assignmentAdditionInt" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                           (rule "add_literals" (formula "20") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "20") (term "1"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "blockEmpty" (formula "20") (term "1"))
                           (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label105") (inst "#innerLabel=_label104"))
                           (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_287"))
                           (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_289") (inst "#v0=x_288"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_288"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_289"))
                           (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                           (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                           (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                           (rule "less_than_comparison_simple" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                           (rule "ifSplit" (formula "20"))
                           (branch "if x_287 true"
                              (builtin "One Step Simplification" (formula "21"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                              (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_290"))
                              (rule "remove_parentheses_right" (formula "20") (term "1"))
                              (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_292") (inst "#v0=x_291"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_291"))
                              (rule "assignment" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_292"))
                              (rule "remove_parentheses_right" (formula "20") (term "1"))
                              (rule "assignment" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "20") (term "1"))
                              (rule "assignment" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "blockEmpty" (formula "20") (term "1"))
                              (rule "postincrement" (formula "20") (term "1"))
                              (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_293"))
                              (rule "remove_parentheses_right" (formula "20") (term "1"))
                              (rule "assignmentAdditionInt" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "20") (term "1"))
                              (rule "assignment" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "blockEmpty" (formula "20") (term "1"))
                              (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label107") (inst "#innerLabel=_label106"))
                              (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_294"))
                              (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_296") (inst "#v0=x_295"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_295"))
                              (rule "assignment" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_296"))
                              (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                              (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                              (rule "less_than_comparison_simple" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                              (rule "ifSplit" (formula "20"))
                              (branch "if x_294 true"
                                 (builtin "One Step Simplification" (formula "21"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_297"))
                                 (rule "remove_parentheses_right" (formula "20") (term "1"))
                                 (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_299") (inst "#v0=x_298"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_298"))
                                 (rule "assignment" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_299"))
                                 (rule "remove_parentheses_right" (formula "20") (term "1"))
                                 (rule "assignment" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                 (rule "assignment" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "blockEmpty" (formula "20") (term "1"))
                                 (rule "postincrement" (formula "20") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_300"))
                                 (rule "remove_parentheses_right" (formula "20") (term "1"))
                                 (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                 (rule "assignment" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "blockEmpty" (formula "20") (term "1"))
                                 (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label109") (inst "#innerLabel=_label108"))
                                 (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_301"))
                                 (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_303") (inst "#v0=x_302"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_302"))
                                 (rule "assignment" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_303"))
                                 (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                 (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                 (rule "ifSplit" (formula "20"))
                                 (branch "if x_301 true"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_304"))
                                    (rule "remove_parentheses_right" (formula "20") (term "1"))
                                    (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_306") (inst "#v0=x_305"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_305"))
                                    (rule "assignment" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_306"))
                                    (rule "remove_parentheses_right" (formula "20") (term "1"))
                                    (rule "assignment" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                    (rule "assignment" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "blockEmpty" (formula "20") (term "1"))
                                    (rule "postincrement" (formula "20") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_307"))
                                    (rule "remove_parentheses_right" (formula "20") (term "1"))
                                    (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                    (rule "assignment" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "blockEmpty" (formula "20") (term "1"))
                                    (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label111") (inst "#innerLabel=_label110"))
                                    (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_308"))
                                    (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_310") (inst "#v0=x_309"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_309"))
                                    (rule "assignment" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_310"))
                                    (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                    (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                    (rule "ifSplit" (formula "20"))
                                    (branch "if x_308 true"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                       (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_311"))
                                       (rule "remove_parentheses_right" (formula "20") (term "1"))
                                       (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_313") (inst "#v0=x_312"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_312"))
                                       (rule "assignment" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_313"))
                                       (rule "remove_parentheses_right" (formula "20") (term "1"))
                                       (rule "assignment" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                       (rule "assignment" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "blockEmpty" (formula "20") (term "1"))
                                       (rule "postincrement" (formula "20") (term "1"))
                                       (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_314"))
                                       (rule "remove_parentheses_right" (formula "20") (term "1"))
                                       (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,1,0"))
                                       (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                       (rule "assignment" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "blockEmpty" (formula "20") (term "1"))
                                       (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label113") (inst "#innerLabel=_label112"))
                                       (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_315"))
                                       (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_317") (inst "#v0=x_316"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_316"))
                                       (rule "assignment" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_317"))
                                       (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                       (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                       (rule "ifSplit" (formula "20"))
                                       (branch "if x_315 true"
                                          (builtin "One Step Simplification" (formula "21"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                          (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_318"))
                                          (rule "remove_parentheses_right" (formula "20") (term "1"))
                                          (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_320") (inst "#v0=x_319"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_319"))
                                          (rule "assignment" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_320"))
                                          (rule "remove_parentheses_right" (formula "20") (term "1"))
                                          (rule "assignment" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                          (rule "assignment" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "blockEmpty" (formula "20") (term "1"))
                                          (rule "postincrement" (formula "20") (term "1"))
                                          (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_321"))
                                          (rule "remove_parentheses_right" (formula "20") (term "1"))
                                          (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                          (rule "add_literals" (formula "20") (term "0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                          (rule "assignment" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "blockEmpty" (formula "20") (term "1"))
                                          (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label115") (inst "#innerLabel=_label114"))
                                          (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_322"))
                                          (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_324") (inst "#v0=x_323"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_323"))
                                          (rule "assignment" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_324"))
                                          (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                          (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                          (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                          (rule "ifSplit" (formula "20"))
                                          (branch "if x_322 true"
                                             (builtin "One Step Simplification" (formula "21"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                             (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_325"))
                                             (rule "remove_parentheses_right" (formula "20") (term "1"))
                                             (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_327") (inst "#v0=x_326"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_326"))
                                             (rule "assignment" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_327"))
                                             (rule "remove_parentheses_right" (formula "20") (term "1"))
                                             (rule "assignment" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0"))
                                             (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                             (rule "assignment" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "blockEmpty" (formula "20") (term "1"))
                                             (rule "postincrement" (formula "20") (term "1"))
                                             (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_328"))
                                             (rule "remove_parentheses_right" (formula "20") (term "1"))
                                             (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                             (rule "add_literals" (formula "20") (term "0,1,0"))
                                             (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                             (rule "assignment" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "blockEmpty" (formula "20") (term "1"))
                                             (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label117") (inst "#innerLabel=_label116"))
                                             (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_329"))
                                             (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_331") (inst "#v0=x_330"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_330"))
                                             (rule "assignment" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_331"))
                                             (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                             (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                             (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                             (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                             (rule "ifSplit" (formula "20"))
                                             (branch "if x_329 true"
                                                (builtin "One Step Simplification" (formula "21"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                                (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_332"))
                                                (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_334") (inst "#v0=x_333"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_333"))
                                                (rule "assignment" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_334"))
                                                (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                (rule "assignment" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                (rule "assignment" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "blockEmpty" (formula "20") (term "1"))
                                                (rule "postincrement" (formula "20") (term "1"))
                                                (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_335"))
                                                (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                                (rule "add_literals" (formula "20") (term "0,1,0"))
                                                (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                (rule "assignment" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "blockEmpty" (formula "20") (term "1"))
                                                (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label119") (inst "#innerLabel=_label118"))
                                                (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_336"))
                                                (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_338") (inst "#v0=x_337"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_337"))
                                                (rule "assignment" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_338"))
                                                (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                                (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                                (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                                (rule "ifSplit" (formula "20"))
                                                (branch "if x_336 true"
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                                   (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_339"))
                                                   (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                   (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_341") (inst "#v0=x_340"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_340"))
                                                   (rule "assignment" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_341"))
                                                   (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                   (rule "assignment" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                   (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                   (rule "assignment" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "blockEmpty" (formula "20") (term "1"))
                                                   (rule "postincrement" (formula "20") (term "1"))
                                                   (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_342"))
                                                   (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                   (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                                   (rule "add_literals" (formula "20") (term "0,1,0"))
                                                   (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                   (rule "assignment" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "blockEmpty" (formula "20") (term "1"))
                                                   (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label121") (inst "#innerLabel=_label120"))
                                                   (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_343"))
                                                   (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_345") (inst "#v0=x_344"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_344"))
                                                   (rule "assignment" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_345"))
                                                   (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                                   (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                                   (rule "ifSplit" (formula "20"))
                                                   (branch "if x_343 true"
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                                      (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_346"))
                                                      (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                      (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_348") (inst "#v0=x_347"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_347"))
                                                      (rule "assignment" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_348"))
                                                      (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                      (rule "assignment" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                      (rule "assignment" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "blockEmpty" (formula "20") (term "1"))
                                                      (rule "postincrement" (formula "20") (term "1"))
                                                      (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_349"))
                                                      (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                      (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,1,0"))
                                                      (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                      (rule "assignment" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "blockEmpty" (formula "20") (term "1"))
                                                      (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label123") (inst "#innerLabel=_label122"))
                                                      (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_350"))
                                                      (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_352") (inst "#v0=x_351"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_351"))
                                                      (rule "assignment" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_352"))
                                                      (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                                      (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                                      (rule "ifSplit" (formula "20"))
                                                      (branch "if x_350 true"
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                                         (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_353"))
                                                         (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                         (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_355") (inst "#v0=x_354"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_354"))
                                                         (rule "assignment" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_355"))
                                                         (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                         (rule "assignment" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                         (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                         (rule "assignment" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "blockEmpty" (formula "20") (term "1"))
                                                         (rule "postincrement" (formula "20") (term "1"))
                                                         (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_187"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_356"))
                                                         (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                         (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,1,0"))
                                                         (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                         (rule "assignment" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "blockEmpty" (formula "20") (term "1"))
                                                         (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label125") (inst "#innerLabel=_label124"))
                                                         (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_187"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_357"))
                                                         (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_359") (inst "#v0=x_358"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_358"))
                                                         (rule "assignment" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_359"))
                                                         (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                                         (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                                         (rule "ifSplit" (formula "20"))
                                                         (branch "if x_357 true"
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "3") (term "0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "3") (term "0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "1"))
                                                            (rule "add_literals" (formula "4") (term "1"))
                                                            (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "applyEq" (formula "11") (term "1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "1"))
                                                            (rule "add_literals" (formula "17") (term "1"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "applyEq" (formula "13") (term "1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "6"))
                                                            (rule "applyEq" (formula "12") (term "1,0,1") (ifseqformula "1"))
                                                            (rule "add_literals" (formula "12") (term "0,1"))
                                                            (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "5"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                            (rule "greater_literals" (formula "6") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "leq_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
                                                            (rule "leq_literals" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "applyEq" (formula "17") (term "0,1,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "16") (term "1,0,1,1,0") (ifseqformula "2"))
                                                            (rule "add_literals" (formula "16") (term "0,1,1,0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "12"))
                                                            (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "5"))
                                                            (rule "greater_literals" (formula "6") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "0,0"))
                                                            (rule "leq_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "9"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                            (rule "add_literals" (formula "11") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                            (rule "mul_literals" (formula "11") (term "1"))
                                                            (rule "divide_inEq3" (formula "3") (inst "divY=res_pow_2") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "3") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "qeq_literals" (formula "3") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "eqSymm" (formula "3") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "divide_inEq0" (formula "10") (inst "divY=n") (ifseqformula "11"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "qeq_literals" (formula "10") (term "0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "qeq_literals" (formula "10") (term "0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "div_literals" (formula "10") (term "1"))
                                                            (rule "divide_inEq0" (formula "10") (inst "divY=res_pow_1") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "10") (term "0,1,1"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "div_literals" (formula "10") (term "1,1,1"))
                                                            (rule "qeq_literals" (formula "10") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "10"))
                                                            (rule "compound_assignment_op_mul" (formula "19") (term "1"))
                                                            (rule "compound_int_cast_expression" (formula "19") (term "1") (inst "#v=x_187"))
                                                            (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                                            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_360"))
                                                            (rule "remove_parentheses_right" (formula "19") (term "1"))
                                                            (rule "compound_multiplication_2" (formula "19") (term "1") (inst "#v1=x_362") (inst "#v0=x_361"))
                                                            (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                                            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_361"))
                                                            (rule "assignment" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                                            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_362"))
                                                            (rule "remove_parentheses_right" (formula "19") (term "1"))
                                                            (rule "assignment" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "assignmentMultiplicationInt" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "translateJavaMulInt" (formula "19") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                            (rule "widening_identity_cast_5" (formula "19") (term "1"))
                                                            (rule "assignment" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "blockEmpty" (formula "19") (term "1"))
                                                            (rule "postincrement" (formula "19") (term "1"))
                                                            (rule "compound_int_cast_expression" (formula "19") (term "1") (inst "#v=x_187"))
                                                            (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                                            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_363"))
                                                            (rule "remove_parentheses_right" (formula "19") (term "1"))
                                                            (rule "assignmentAdditionInt" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "translateJavaAddInt" (formula "19") (term "0,1,0"))
                                                            (rule "add_literals" (formula "19") (term "0,1,0"))
                                                            (rule "widening_identity_cast_5" (formula "19") (term "1"))
                                                            (rule "assignment" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "blockEmpty" (formula "19") (term "1"))
                                                            (rule "loopUnwind" (formula "19") (term "1") (inst "#outerLabel=_label127") (inst "#innerLabel=_label126"))
                                                            (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x_187"))
                                                            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_364"))
                                                            (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_366") (inst "#v0=x_365"))
                                                            (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                                            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_365"))
                                                            (rule "assignment" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                                            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_366"))
                                                            (rule "assignmentSubtractionInt" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "translateJavaSubInt" (formula "19") (term "0,1,0"))
                                                            (rule "sub_literals" (formula "19") (term "0,1,0"))
                                                            (rule "less_than_comparison_simple" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "less_literals" (formula "19") (term "0,0,1,0"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "ifSplit" (formula "19"))
                                                            (branch "if x_364 true"
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "if x_364 false"
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "blockEmpty" (formula "19") (term "1"))
                                                               (rule "methodCallReturn" (formula "19") (term "1"))
                                                               (rule "assignment" (formula "19") (term "1"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "methodCallEmpty" (formula "19") (term "1"))
                                                               (rule "blockEmpty" (formula "19") (term "1"))
                                                               (rule "assignment" (formula "19") (term "1"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "methodCallEmpty" (formula "19") (term "1"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "emptyModality" (formula "19") (term "1"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "notRight" (formula "19"))
                                                               (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                                               (rule "leq_literals" (formula "11"))
                                                               (rule "closeFalse" (formula "11"))
                                                            )
                                                         )
                                                         (branch "if x_357 false"
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "inEqSimp_geqRight" (formula "19"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "blockEmpty" (formula "21") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
                                                            (rule "add_literals" (formula "21") (term "0,1,1,0"))
                                                            (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "qeq_literals" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq0" (formula "17"))
                                                            (rule "mul_literals" (formula "17") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                            (rule "add_literals" (formula "17") (term "0,0"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                            (rule "mul_literals" (formula "16") (term "1"))
                                                            (rule "methodCallReturn" (formula "19") (term "1"))
                                                            (rule "assignment" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "methodCallEmpty" (formula "19") (term "1"))
                                                            (rule "blockEmpty" (formula "19") (term "1"))
                                                            (rule "assignment" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "methodCallEmpty" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "emptyModality" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "notRight" (formula "19"))
                                                            (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                            (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                            (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "applyEqRigid" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "mul_literals" (formula "12") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                            (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                                                            (rule "greater_literals" (formula "8") (term "0"))
                                                            (builtin "One Step Simplification" (formula "8"))
                                                            (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                                            (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "12"))
                                                            (rule "greater_literals" (formula "16") (term "0"))
                                                            (builtin "One Step Simplification" (formula "16"))
                                                            (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                            (rule "mul_literals" (formula "16") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "16"))
                                                            (rule "qeq_literals" (formula "18") (term "0"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "closeFalse" (formula "18"))
                                                         )
                                                      )
                                                      (branch "if x_350 false"
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "inEqSimp_geqRight" (formula "19"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "blockEmpty" (formula "21") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "16"))
                                                         (rule "mul_literals" (formula "16") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                         (rule "add_literals" (formula "16") (term "0,0"))
                                                         (rule "applyEq" (formula "19") (term "1,0,1,1,0") (ifseqformula "2"))
                                                         (rule "add_literals" (formula "19") (term "0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                         (rule "mul_literals" (formula "16") (term "1"))
                                                         (rule "methodCallReturn" (formula "19") (term "1"))
                                                         (rule "assignment" (formula "19") (term "1"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "methodCallEmpty" (formula "19") (term "1"))
                                                         (rule "blockEmpty" (formula "19") (term "1"))
                                                         (rule "assignment" (formula "19") (term "1"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "methodCallEmpty" (formula "19") (term "1"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "emptyModality" (formula "19") (term "1"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "notRight" (formula "19"))
                                                         (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                         (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                         (rule "applyEqRigid" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "12") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                                                         (rule "greater_literals" (formula "15") (term "0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                         (rule "mul_literals" (formula "15") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "15"))
                                                         (rule "qeq_literals" (formula "17") (term "0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "closeFalse" (formula "17"))
                                                      )
                                                   )
                                                   (branch "if x_343 false"
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "inEqSimp_geqRight" (formula "19"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "blockEmpty" (formula "21") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
                                                      (rule "add_literals" (formula "21") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "0,0"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                      (rule "mul_literals" (formula "16") (term "1"))
                                                      (rule "methodCallReturn" (formula "19") (term "1"))
                                                      (rule "assignment" (formula "19") (term "1"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "methodCallEmpty" (formula "19") (term "1"))
                                                      (rule "blockEmpty" (formula "19") (term "1"))
                                                      (rule "assignment" (formula "19") (term "1"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "methodCallEmpty" (formula "19") (term "1"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "emptyModality" (formula "19") (term "1"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "notRight" (formula "19"))
                                                      (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "13") (term "1,1"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                      (rule "add_literals" (formula "13") (term "0,1"))
                                                      (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                                      (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                      (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                                                      (rule "greater_literals" (formula "15") (term "0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "16"))
                                                      (rule "qeq_literals" (formula "14") (term "0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "closeFalse" (formula "14"))
                                                   )
                                                )
                                                (branch "if x_336 false"
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "19"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "blockEmpty" (formula "21") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "0,0"))
                                                   (rule "applyEq" (formula "19") (term "1,0,1,1,0") (ifseqformula "2"))
                                                   (rule "add_literals" (formula "19") (term "0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1"))
                                                   (rule "methodCallReturn" (formula "19") (term "1"))
                                                   (rule "assignment" (formula "19") (term "1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "methodCallEmpty" (formula "19") (term "1"))
                                                   (rule "blockEmpty" (formula "19") (term "1"))
                                                   (rule "assignment" (formula "19") (term "1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "methodCallEmpty" (formula "19") (term "1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "emptyModality" (formula "19") (term "1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "notRight" (formula "19"))
                                                   (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                   (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "13") (term "1,1"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                   (rule "add_literals" (formula "13") (term "0,1"))
                                                   (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0"))
                                                   (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "9"))
                                                   (rule "greater_literals" (formula "12") (term "0"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                   (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "14"))
                                                   (rule "greater_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                   (rule "mul_literals" (formula "13") (term "1"))
                                                   (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "2"))
                                                   (rule "greater_literals" (formula "13") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "mul_literals" (formula "13") (term "1,0"))
                                                   (rule "leq_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "11"))
                                                   (rule "greater_literals" (formula "16") (term "0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "18") (term "0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "closeFalse" (formula "18"))
                                                )
                                             )
                                             (branch "if x_329 false"
                                                (builtin "One Step Simplification" (formula "21"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "inEqSimp_geqRight" (formula "19"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "blockEmpty" (formula "21") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "2"))
                                                (rule "add_literals" (formula "20") (term "0,1,1,0"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "methodCallReturn" (formula "19") (term "1"))
                                                (rule "assignment" (formula "19") (term "1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "methodCallEmpty" (formula "19") (term "1"))
                                                (rule "blockEmpty" (formula "19") (term "1"))
                                                (rule "assignment" (formula "19") (term "1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "methodCallEmpty" (formula "19") (term "1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "emptyModality" (formula "19") (term "1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "notRight" (formula "19"))
                                                (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "applyEqRigid" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "12") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "13"))
                                                (rule "greater_literals" (formula "12") (term "0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1"))
                                                (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "2"))
                                                (rule "greater_literals" (formula "12") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "mul_literals" (formula "12") (term "1,0"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "9"))
                                                (rule "greater_literals" (formula "12") (term "0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                                                (rule "greater_literals" (formula "8") (term "0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                                (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "12"))
                                                (rule "greater_literals" (formula "17") (term "0"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "mul_literals" (formula "17") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "17"))
                                                (rule "qeq_literals" (formula "19") (term "0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "closeFalse" (formula "19"))
                                             )
                                          )
                                          (branch "if x_322 false"
                                             (builtin "One Step Simplification" (formula "21"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "inEqSimp_geqRight" (formula "19"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "blockEmpty" (formula "21") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                             (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
                                             (rule "add_literals" (formula "21") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0"))
                                             (rule "add_literals" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1"))
                                             (rule "methodCallReturn" (formula "19") (term "1"))
                                             (rule "assignment" (formula "19") (term "1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "methodCallEmpty" (formula "19") (term "1"))
                                             (rule "blockEmpty" (formula "19") (term "1"))
                                             (rule "assignment" (formula "19") (term "1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "methodCallEmpty" (formula "19") (term "1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "emptyModality" (formula "19") (term "1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "notRight" (formula "19"))
                                             (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "13") (term "1,1"))
                                             (rule "polySimp_addComm1" (formula "13") (term "1"))
                                             (rule "add_literals" (formula "13") (term "0,1"))
                                             (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                             (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                             (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                                             (rule "greater_literals" (formula "8") (term "0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                             (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "12"))
                                             (rule "greater_literals" (formula "16") (term "0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "17"))
                                             (rule "qeq_literals" (formula "15") (term "0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "closeFalse" (formula "15"))
                                          )
                                       )
                                       (branch "if x_315 false"
                                          (builtin "One Step Simplification" (formula "21"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "inEqSimp_geqRight" (formula "19"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "blockEmpty" (formula "21") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                          (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
                                          (rule "add_literals" (formula "21") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "18"))
                                          (rule "mul_literals" (formula "18") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                          (rule "add_literals" (formula "18") (term "0,0"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                          (rule "mul_literals" (formula "16") (term "1"))
                                          (rule "methodCallReturn" (formula "19") (term "1"))
                                          (rule "assignment" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "methodCallEmpty" (formula "19") (term "1"))
                                          (rule "blockEmpty" (formula "19") (term "1"))
                                          (rule "assignment" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "methodCallEmpty" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "emptyModality" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "notRight" (formula "19"))
                                          (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "12") (term "1,1"))
                                          (rule "polySimp_addComm1" (formula "12") (term "1"))
                                          (rule "add_literals" (formula "12") (term "0,1"))
                                          (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "0"))
                                          (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "13"))
                                          (rule "greater_literals" (formula "12") (term "0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1"))
                                          (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "2"))
                                          (rule "greater_literals" (formula "12") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1,0"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "9"))
                                          (rule "greater_literals" (formula "12") (term "0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0"))
                                          (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "11"))
                                          (rule "greater_literals" (formula "16") (term "0"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                          (rule "mul_literals" (formula "16") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "16"))
                                          (rule "qeq_literals" (formula "18") (term "0"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "closeFalse" (formula "18"))
                                       )
                                    )
                                    (branch "if x_308 false"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "inEqSimp_geqRight" (formula "19"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "blockEmpty" (formula "21") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "3"))
                                       (rule "add_literals" (formula "20") (term "0,1,1,0"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "methodCallReturn" (formula "19") (term "1"))
                                       (rule "assignment" (formula "19") (term "1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "methodCallEmpty" (formula "19") (term "1"))
                                       (rule "blockEmpty" (formula "19") (term "1"))
                                       (rule "assignment" (formula "19") (term "1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "methodCallEmpty" (formula "19") (term "1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "emptyModality" (formula "19") (term "1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "notRight" (formula "19"))
                                       (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "13") (term "1,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "1"))
                                       (rule "add_literals" (formula "13") (term "0,1"))
                                       (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                                       (rule "greater_literals" (formula "8") (term "0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                       (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "12"))
                                       (rule "greater_literals" (formula "16") (term "0"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "15"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                 )
                                 (branch "if x_301 false"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "inEqSimp_geqRight" (formula "19"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "blockEmpty" (formula "21") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                    (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
                                    (rule "add_literals" (formula "21") (term "0,1,1,0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "17"))
                                    (rule "mul_literals" (formula "17") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "add_literals" (formula "17") (term "0,0"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1"))
                                    (rule "methodCallReturn" (formula "19") (term "1"))
                                    (rule "assignment" (formula "19") (term "1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "methodCallEmpty" (formula "19") (term "1"))
                                    (rule "blockEmpty" (formula "19") (term "1"))
                                    (rule "assignment" (formula "19") (term "1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "methodCallEmpty" (formula "19") (term "1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "emptyModality" (formula "19") (term "1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "notRight" (formula "19"))
                                    (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                    (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "13") (term "1,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "1"))
                                    (rule "add_literals" (formula "13") (term "0,1"))
                                    (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                                    (rule "greater_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                    (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "12"))
                                    (rule "greater_literals" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "16"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                              )
                              (branch "if x_294 false"
                                 (builtin "One Step Simplification" (formula "21"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "inEqSimp_geqRight" (formula "19"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "blockEmpty" (formula "21") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                 (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
                                 (rule "add_literals" (formula "21") (term "0,1,1,0"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "16"))
                                 (rule "mul_literals" (formula "16") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "add_literals" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                 (rule "mul_literals" (formula "16") (term "1"))
                                 (rule "methodCallReturn" (formula "19") (term "1"))
                                 (rule "assignment" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "methodCallEmpty" (formula "19") (term "1"))
                                 (rule "blockEmpty" (formula "19") (term "1"))
                                 (rule "assignment" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "methodCallEmpty" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "emptyModality" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "notRight" (formula "19"))
                                 (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEqRigid" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "12") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                                 (rule "greater_literals" (formula "15") (term "0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                 (rule "mul_literals" (formula "15") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "closeFalse" (formula "16"))
                              )
                           )
                           (branch "if x_287 false"
                              (builtin "One Step Simplification" (formula "21"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "inEqSimp_geqRight" (formula "19"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "blockEmpty" (formula "21") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "add_literals" (formula "16") (term "0,0"))
                              (rule "applyEq" (formula "19") (term "1,0,1,1,0") (ifseqformula "2"))
                              (rule "add_literals" (formula "19") (term "0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "1"))
                              (rule "methodCallReturn" (formula "19") (term "1"))
                              (rule "assignment" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "methodCallEmpty" (formula "19") (term "1"))
                              (rule "blockEmpty" (formula "19") (term "1"))
                              (rule "assignment" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "methodCallEmpty" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "emptyModality" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "notRight" (formula "19"))
                              (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "1"))
                              (rule "mul_literals" (formula "13") (term "1,1"))
                              (rule "polySimp_addComm1" (formula "13") (term "1"))
                              (rule "add_literals" (formula "13") (term "0,1"))
                              (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0"))
                              (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0"))
                              (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                              (rule "greater_literals" (formula "15") (term "0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "14"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "closeFalse" (formula "16"))
                           )
                        )
                        (branch "if x_280 false"
                           (builtin "One Step Simplification" (formula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "inEqSimp_geqRight" (formula "19"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "blockEmpty" (formula "21") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "18"))
                           (rule "mul_literals" (formula "18") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                           (rule "add_literals" (formula "18") (term "0,0"))
                           (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "3"))
                           (rule "add_literals" (formula "20") (term "0,1,1,0"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1"))
                           (rule "methodCallReturn" (formula "19") (term "1"))
                           (rule "assignment" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "methodCallEmpty" (formula "19") (term "1"))
                           (rule "blockEmpty" (formula "19") (term "1"))
                           (rule "assignment" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "methodCallEmpty" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "emptyModality" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "notRight" (formula "19"))
                           (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0"))
                           (rule "applyEqRigid" (formula "12") (term "0,1,0") (ifseqformula "1"))
                           (rule "mul_literals" (formula "12") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "9"))
                           (rule "greater_literals" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                           (rule "mul_literals" (formula "12") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                           (rule "mul_literals" (formula "12") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "14"))
                           (rule "greater_literals" (formula "13") (term "0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                           (rule "add_literals" (formula "13") (term "1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                           (rule "mul_literals" (formula "13") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "2"))
                           (rule "greater_literals" (formula "13") (term "0,0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "mul_literals" (formula "13") (term "1,0"))
                           (rule "leq_literals" (formula "13") (term "0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                           (rule "greater_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                           (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "12"))
                           (rule "greater_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "17"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "18"))
                           (rule "qeq_literals" (formula "16") (term "0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "closeFalse" (formula "16"))
                        )
                     )
                     (branch "if x_273 false"
                        (builtin "One Step Simplification" (formula "21"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "inEqSimp_geqRight" (formula "19"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "blockEmpty" (formula "21") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "19") (term "1,0,1,1,0") (ifseqformula "2"))
                        (rule "add_literals" (formula "19") (term "0,1,1,0"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1"))
                        (rule "methodCallReturn" (formula "19") (term "1"))
                        (rule "assignment" (formula "19") (term "1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "methodCallEmpty" (formula "19") (term "1"))
                        (rule "blockEmpty" (formula "19") (term "1"))
                        (rule "assignment" (formula "19") (term "1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "methodCallEmpty" (formula "19") (term "1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "emptyModality" (formula "19") (term "1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "notRight" (formula "19"))
                        (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0"))
                        (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "applyEqRigid" (formula "12") (term "0,1,0") (ifseqformula "1"))
                        (rule "mul_literals" (formula "12") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "9"))
                        (rule "greater_literals" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                        (rule "mul_literals" (formula "12") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0"))
                        (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "14"))
                        (rule "greater_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                        (rule "add_literals" (formula "13") (term "1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1"))
                        (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "2"))
                        (rule "greater_literals" (formula "13") (term "0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "mul_literals" (formula "13") (term "1,0"))
                        (rule "leq_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "11"))
                        (rule "greater_literals" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "16"))
                        (rule "qeq_literals" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "closeFalse" (formula "18"))
                     )
                  )
                  (branch "if x_266 false"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_geqRight" (formula "19"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "blockEmpty" (formula "21") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                     (rule "add_literals" (formula "18") (term "0,0"))
                     (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
                     (rule "add_literals" (formula "21") (term "0,1,1,0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "methodCallReturn" (formula "19") (term "1"))
                     (rule "assignment" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "methodCallEmpty" (formula "19") (term "1"))
                     (rule "blockEmpty" (formula "19") (term "1"))
                     (rule "assignment" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "methodCallEmpty" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "emptyModality" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "notRight" (formula "19"))
                     (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "1"))
                     (rule "mul_literals" (formula "13") (term "1,1"))
                     (rule "polySimp_addComm1" (formula "13") (term "1"))
                     (rule "add_literals" (formula "13") (term "0,1"))
                     (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0"))
                     (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                     (rule "greater_literals" (formula "8") (term "0"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                     (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "12"))
                     (rule "greater_literals" (formula "16") (term "0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "16"))
                     (rule "qeq_literals" (formula "18") (term "0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "closeFalse" (formula "18"))
                  )
               )
               (branch "if x_233 false"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "19"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "blockEmpty" (formula "21") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                  (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq0" (formula "18"))
                  (rule "mul_literals" (formula "18") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0"))
                  (rule "add_literals" (formula "18") (term "0,0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "2"))
                  (rule "add_literals" (formula "20") (term "0,1,1,0"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "methodCallReturn" (formula "19") (term "1"))
                  (rule "assignment" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "methodCallEmpty" (formula "19") (term "1"))
                  (rule "blockEmpty" (formula "19") (term "1"))
                  (rule "assignment" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "methodCallEmpty" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "emptyModality" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "notRight" (formula "19"))
                  (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0"))
                  (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "1"))
                  (rule "mul_literals" (formula "13") (term "1,1"))
                  (rule "polySimp_addComm1" (formula "13") (term "1"))
                  (rule "add_literals" (formula "13") (term "0,1"))
                  (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "0"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                  (rule "greater_literals" (formula "15") (term "0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "mul_literals" (formula "15") (term "1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "mul_literals" (formula "15") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "10"))
                  (rule "greater_literals" (formula "7") (term "0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1"))
                  (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "9"))
                  (rule "greater_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "14"))
                  (rule "greater_literals" (formula "13") (term "0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                  (rule "mul_literals" (formula "13") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "17"))
                  (rule "greater_literals" (formula "13") (term "0,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "mul_literals" (formula "13") (term "1,0"))
                  (rule "leq_literals" (formula "13") (term "0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "12"))
                  (rule "mul_literals" (formula "16") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "15"))
                  (rule "greater_literals" (formula "16") (term "0,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1,0"))
                  (rule "leq_literals" (formula "16") (term "0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "12"))
                  (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0"))
                  (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "16"))
                  (rule "greater_literals" (formula "6") (term "0,0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1,0"))
                  (rule "leq_literals" (formula "6") (term "0"))
                  (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "18"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(1(#)))"))
                  (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "7") (term "0,0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0"))
                  (rule "qeq_literals" (formula "7") (term "0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "7"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "6"))
                  (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "15"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "14"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "13"))
                  (rule "mul_literals" (formula "7") (term "1,1"))
                  (rule "add_literals" (formula "7") (term "1"))
                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "13"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "13"))
                  (rule "leq_literals" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "applyEqRigid" (formula "5") (term "0,1") (ifseqformula "12"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "12"))
                  (rule "mul_literals" (formula "9") (term "1,1"))
                  (rule "add_literals" (formula "9") (term "1"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                  (rule "qeq_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "12"))
                  (rule "applyEq" (formula "4") (term "1") (ifseqformula "12"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "13"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "14"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_exactShadow1" (formula "8") (ifseqformula "5"))
                  (rule "greater_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "14"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "methodCallWithAssignmentWithinClass" (formula "15") (term "1") (inst "#v0=x"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_236"))
                  (rule "variableDeclarationAssign" (formula "15") (term "1"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_11"))
                  (rule "assignment" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "variableDeclarationAssign" (formula "15") (term "1"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "b_11"))
                  (rule "assignment" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_pow_7,savedHeapBefore_pow_7"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_237"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_237"))
                  (rule "equality_comparison_simple" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "equal_literals" (formula "15") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "ifSplit" (formula "15"))
                  (branch "if x_237 true"
                     (builtin "One Step Simplification" (formula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_237 false"
                     (builtin "One Step Simplification" (formula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "res_8"))
                     (rule "assignment" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "for_to_while" (formula "15") (term "1") (inst "#outerLabel=_label89") (inst "#innerLabel=_label88"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "i_8"))
                     (rule "assignment" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "loopUnwind" (formula "15") (term "1") (inst "#outerLabel=_label91") (inst "#innerLabel=_label90"))
                     (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_237"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_238"))
                     (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_240") (inst "#v0=x_239"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_239"))
                     (rule "assignment" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_240"))
                     (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                     (rule "sub_literals" (formula "15") (term "0,1,0"))
                     (rule "less_than_comparison_simple" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "less_literals" (formula "15") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "ifSplit" (formula "15"))
                     (branch "if x_238 true"
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "compound_assignment_op_mul" (formula "15") (term "1"))
                        (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_237"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_241"))
                        (rule "remove_parentheses_right" (formula "15") (term "1"))
                        (rule "compound_multiplication_2" (formula "15") (term "1") (inst "#v1=x_243") (inst "#v0=x_242"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_242"))
                        (rule "assignment" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_243"))
                        (rule "remove_parentheses_right" (formula "15") (term "1"))
                        (rule "assignment" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "assignmentMultiplicationInt" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "translateJavaMulInt" (formula "15") (term "0,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "15") (term "1"))
                        (rule "assignment" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "blockEmpty" (formula "15") (term "1"))
                        (rule "postincrement" (formula "15") (term "1"))
                        (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_237"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_244"))
                        (rule "remove_parentheses_right" (formula "15") (term "1"))
                        (rule "assignmentAdditionInt" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
                        (rule "add_zero_left" (formula "15") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "15") (term "1"))
                        (rule "assignment" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "blockEmpty" (formula "15") (term "1"))
                        (rule "loopUnwind" (formula "15") (term "1") (inst "#outerLabel=_label93") (inst "#innerLabel=_label92"))
                        (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_237"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_245"))
                        (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_247") (inst "#v0=x_246"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_246"))
                        (rule "assignment" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_247"))
                        (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                        (rule "sub_literals" (formula "15") (term "0,1,0"))
                        (rule "less_than_comparison_simple" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "less_literals" (formula "15") (term "0,0,1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "ifSplit" (formula "15"))
                        (branch "if x_245 true"
                           (builtin "One Step Simplification" (formula "16"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "compound_assignment_op_mul" (formula "15") (term "1"))
                           (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_237"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_248"))
                           (rule "remove_parentheses_right" (formula "15") (term "1"))
                           (rule "compound_multiplication_2" (formula "15") (term "1") (inst "#v1=x_250") (inst "#v0=x_249"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_249"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_250"))
                           (rule "remove_parentheses_right" (formula "15") (term "1"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "assignmentMultiplicationInt" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "translateJavaMulInt" (formula "15") (term "0,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "15") (term "1"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "blockEmpty" (formula "15") (term "1"))
                           (rule "postincrement" (formula "15") (term "1"))
                           (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_237"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_251"))
                           (rule "remove_parentheses_right" (formula "15") (term "1"))
                           (rule "assignmentAdditionInt" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
                           (rule "add_literals" (formula "15") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "15") (term "1"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "blockEmpty" (formula "15") (term "1"))
                           (rule "loopUnwind" (formula "15") (term "1") (inst "#outerLabel=_label95") (inst "#innerLabel=_label94"))
                           (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_237"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_252"))
                           (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_254") (inst "#v0=x_253"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_253"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_254"))
                           (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                           (rule "sub_literals" (formula "15") (term "0,1,0"))
                           (rule "less_than_comparison_simple" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "less_literals" (formula "15") (term "0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "ifSplit" (formula "15"))
                           (branch "if x_252 true"
                              (builtin "One Step Simplification" (formula "16"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "compound_assignment_op_mul" (formula "15") (term "1"))
                              (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_237"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_255"))
                              (rule "remove_parentheses_right" (formula "15") (term "1"))
                              (rule "compound_multiplication_2" (formula "15") (term "1") (inst "#v1=x_257") (inst "#v0=x_256"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_256"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_257"))
                              (rule "remove_parentheses_right" (formula "15") (term "1"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "assignmentMultiplicationInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaMulInt" (formula "15") (term "0,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "15") (term "1"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "blockEmpty" (formula "15") (term "1"))
                              (rule "postincrement" (formula "15") (term "1"))
                              (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_237"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_258"))
                              (rule "remove_parentheses_right" (formula "15") (term "1"))
                              (rule "assignmentAdditionInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
                              (rule "add_literals" (formula "15") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "15") (term "1"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "blockEmpty" (formula "15") (term "1"))
                              (rule "loopUnwind" (formula "15") (term "1") (inst "#outerLabel=_label97") (inst "#innerLabel=_label96"))
                              (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_237"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_259"))
                              (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_261") (inst "#v0=x_260"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_260"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_261"))
                              (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                              (rule "sub_literals" (formula "15") (term "0,1,0"))
                              (rule "less_than_comparison_simple" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "less_literals" (formula "15") (term "0,0,1,0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "ifSplit" (formula "15"))
                              (branch "if x_259 true"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_259 false"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "blockEmpty" (formula "15") (term "1"))
                                 (rule "methodCallReturn" (formula "15") (term "1"))
                                 (rule "assignment" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "methodCallEmpty" (formula "15") (term "1"))
                                 (rule "blockEmpty" (formula "15") (term "1"))
                                 (rule "assignment" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "methodCallEmpty" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "emptyModality" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "notRight" (formula "15"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "12") (term "0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "closeFalse" (formula "12"))
                              )
                           )
                           (branch "if x_252 false"
                              (builtin "One Step Simplification" (formula "16"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "if x_245 false"
                           (builtin "One Step Simplification" (formula "16"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "if x_238 false"
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
            )
            (branch "if x_207 false"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_geqRight" (formula "19"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "blockEmpty" (formula "21") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
               (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
               (rule "add_literals" (formula "21") (term "0,1,1,0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
               (rule "leq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq0" (formula "17"))
               (rule "mul_literals" (formula "17") (term "1,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
               (rule "mul_literals" (formula "16") (term "1"))
               (rule "methodCallReturn" (formula "19") (term "1"))
               (rule "assignment" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "blockEmpty" (formula "19") (term "1"))
               (rule "assignment" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "emptyModality" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "notRight" (formula "19"))
               (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "13") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "11") (term "0"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "applyEqRigid" (formula "12") (term "0,1,0") (ifseqformula "1"))
               (rule "mul_literals" (formula "12") (term "1,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
               (rule "greater_literals" (formula "15") (term "0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "mul_literals" (formula "15") (term "1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15"))
               (rule "mul_literals" (formula "15") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
               (rule "leq_literals" (formula "2") (term "0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "10"))
               (rule "greater_literals" (formula "7") (term "0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1"))
               (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "9"))
               (rule "greater_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "polySimp_rightDist" (formula "12") (term "0,0"))
               (rule "mul_literals" (formula "12") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "polySimp_elimOne" (formula "12") (term "0"))
               (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "14"))
               (rule "greater_literals" (formula "13") (term "0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "17"))
               (rule "greater_literals" (formula "13") (term "0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1,0"))
               (rule "leq_literals" (formula "13") (term "0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "12"))
               (rule "mul_literals" (formula "16") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0"))
               (rule "add_literals" (formula "16") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
               (rule "mul_literals" (formula "16") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "15"))
               (rule "greater_literals" (formula "16") (term "0,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "mul_literals" (formula "16") (term "1,0"))
               (rule "leq_literals" (formula "16") (term "0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "12"))
               (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "16"))
               (rule "greater_literals" (formula "6") (term "0,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1,0"))
               (rule "leq_literals" (formula "6") (term "0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "18"))
               (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(#))"))
               (rule "leq_literals" (formula "7") (term "0,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0"))
               (rule "qeq_literals" (formula "7") (term "0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "7"))
               (rule "leq_literals" (formula "5") (term "0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "methodCallWithAssignmentWithinClass" (formula "20") (term "1") (inst "#v0=x"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_210"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_10"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_10"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_pow_6,savedHeapBefore_pow_6"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_211"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_211"))
               (rule "equality_comparison_simple" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "equal_literals" (formula "20") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "ifSplit" (formula "20"))
               (branch "if x_211 true"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_211 false"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "res_7"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "for_to_while" (formula "20") (term "1") (inst "#outerLabel=_label79") (inst "#innerLabel=_label78"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_7"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label81") (inst "#innerLabel=_label80"))
                  (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_211"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_212"))
                  (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_214") (inst "#v0=x_213"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_213"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_214"))
                  (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                  (rule "sub_literals" (formula "20") (term "0,1,0"))
                  (rule "less_than_comparison_simple" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "ifSplit" (formula "20"))
                  (branch "if x_212 true"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                     (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_211"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_215"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_217") (inst "#v0=x_216"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_216"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_217"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "postincrement" (formula "20") (term "1"))
                     (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_211"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_218"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "assignmentAdditionInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                     (rule "add_zero_left" (formula "20") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label83") (inst "#innerLabel=_label82"))
                     (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_211"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_219"))
                     (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_221") (inst "#v0=x_220"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_220"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_221"))
                     (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                     (rule "sub_literals" (formula "20") (term "0,1,0"))
                     (rule "less_than_comparison_simple" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "less_literals" (formula "20") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "ifSplit" (formula "20"))
                     (branch "if x_219 true"
                        (builtin "One Step Simplification" (formula "21"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                        (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_211"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_222"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_224") (inst "#v0=x_223"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_223"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_224"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "blockEmpty" (formula "20") (term "1"))
                        (rule "postincrement" (formula "20") (term "1"))
                        (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_211"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_225"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "assignmentAdditionInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                        (rule "add_literals" (formula "20") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "blockEmpty" (formula "20") (term "1"))
                        (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label85") (inst "#innerLabel=_label84"))
                        (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_211"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_226"))
                        (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_228") (inst "#v0=x_227"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_227"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_228"))
                        (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                        (rule "sub_literals" (formula "20") (term "0,1,0"))
                        (rule "less_than_comparison_simple" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "less_literals" (formula "20") (term "0,0,1,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "ifSplit" (formula "20"))
                        (branch "if x_226 true"
                           (builtin "One Step Simplification" (formula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_226 false"
                           (builtin "One Step Simplification" (formula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "blockEmpty" (formula "20") (term "1"))
                           (rule "methodCallReturn" (formula "20") (term "1"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "methodCallEmpty" (formula "20") (term "1"))
                           (rule "blockEmpty" (formula "20") (term "1"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "methodCallEmpty" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "emptyModality" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "notRight" (formula "20"))
                           (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0"))
                           (rule "qeq_literals" (formula "13") (term "0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "4"))
                           (rule "andLeft" (formula "8"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                           (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,1,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0"))
                           (rule "add_zero_right" (formula "8") (term "0"))
                           (rule "leq_literals" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                     )
                     (branch "if x_219 false"
                        (builtin "One Step Simplification" (formula "21"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "if x_212 false"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch "if x_188 false"
            (builtin "One Step Simplification" (formula "21"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "19"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "blockEmpty" (formula "21") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
            (rule "applyEq" (formula "18") (term "0") (ifseqformula "16"))
            (rule "inEqSimp_homoInEq0" (formula "18"))
            (rule "mul_literals" (formula "18") (term "1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0"))
            (rule "add_literals" (formula "18") (term "0,0"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
            (rule "leq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "15"))
            (rule "add_literals" (formula "20") (term "0,1,1,0"))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
            (rule "qeq_literals" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
            (rule "mul_literals" (formula "16") (term "1"))
            (rule "methodCallReturn" (formula "19") (term "1"))
            (rule "assignment" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "methodCallEmpty" (formula "19") (term "1"))
            (rule "blockEmpty" (formula "19") (term "1"))
            (rule "assignment" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "methodCallEmpty" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "emptyModality" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "notRight" (formula "19"))
            (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "11") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "11"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0"))
            (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "9") (term "0"))
            (rule "applyEqRigid" (formula "10") (term "0,1,0") (ifseqformula "1"))
            (rule "mul_literals" (formula "10") (term "1,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "inEqSimp_exactShadow1" (formula "10") (ifseqformula "7"))
            (rule "greater_literals" (formula "10") (term "0"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "polySimp_rightDist" (formula "10") (term "0,0"))
            (rule "mul_literals" (formula "10") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "polySimp_elimOne" (formula "10") (term "0"))
            (rule "inEqSimp_exactShadow1" (formula "11") (ifseqformula "12"))
            (rule "greater_literals" (formula "11") (term "0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "1,1,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "14"))
            (rule "leq_literals" (formula "11") (term "0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "9"))
            (rule "greater_literals" (formula "15") (term "0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "mul_literals" (formula "15") (term "1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
            (rule "mul_literals" (formula "15") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "15"))
            (rule "leq_literals" (formula "13") (term "0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "9"))
            (rule "greater_literals" (formula "6") (term "0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_mulAssoc" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "11"))
            (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
            (rule "add_literals" (formula "5") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
            (rule "mul_literals" (formula "5") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "15"))
            (rule "greater_literals" (formula "5") (term "0,0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "mul_literals" (formula "5") (term "1,0"))
            (rule "leq_literals" (formula "5") (term "0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "11"))
            (rule "mul_literals" (formula "15") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0"))
            (rule "add_literals" (formula "15") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
            (rule "mul_literals" (formula "15") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "14"))
            (rule "greater_literals" (formula "15") (term "0,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "mul_literals" (formula "15") (term "1,0"))
            (rule "leq_literals" (formula "15") (term "0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "18"))
            (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
            (rule "polySimp_addComm0" (formula "6") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(4(#))"))
            (rule "leq_literals" (formula "6") (term "0,0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
            (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "qeq_literals" (formula "6") (term "0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "6"))
            (rule "leq_literals" (formula "4") (term "0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "methodCallWithAssignmentWithinClass" (formula "20") (term "1") (inst "#v0=x"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_191"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_9"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_9"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_pow_5,savedHeapBefore_pow_5"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_192"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_192"))
            (rule "equality_comparison_simple" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "equal_literals" (formula "20") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "ifSplit" (formula "20"))
            (branch "if x_192 true"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_192 false"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "res_6"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "for_to_while" (formula "20") (term "1") (inst "#outerLabel=_label71") (inst "#innerLabel=_label70"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_6"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label73") (inst "#innerLabel=_label72"))
               (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_192"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_193"))
               (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_195") (inst "#v0=x_194"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_194"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_195"))
               (rule "assignmentSubtractionInt" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
               (rule "sub_literals" (formula "20") (term "0,1,0"))
               (rule "less_than_comparison_simple" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "less_literals" (formula "20") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "ifSplit" (formula "20"))
               (branch "if x_193 true"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                  (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_192"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_196"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_198") (inst "#v0=x_197"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_197"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_198"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "postincrement" (formula "20") (term "1"))
                  (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_192"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_199"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "assignmentAdditionInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                  (rule "add_zero_left" (formula "20") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label75") (inst "#innerLabel=_label74"))
                  (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_192"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_200"))
                  (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_202") (inst "#v0=x_201"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_201"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_202"))
                  (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                  (rule "sub_literals" (formula "20") (term "0,1,0"))
                  (rule "less_than_comparison_simple" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "ifSplit" (formula "20"))
                  (branch "if x_200 true"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_200 false"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "methodCallReturn" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "methodCallEmpty" (formula "20") (term "1"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "methodCallEmpty" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "emptyModality" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "notRight" (formula "20"))
                     (rule "applyEqRigid" (formula "3") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0"))
                     (rule "qeq_literals" (formula "12") (term "0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "7"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
               )
               (branch "if x_193 false"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
      )
   )
   (branch
      (rule "inEqSimp_geqRight" (formula "18"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "0,1"))
      (builtin "Evaluate Query" (formula "8") (term "0,0") (newnames "a,b,callee,queryResult,res_pow"))
      (rule "replaceKnownQuery_Helper_pow(heap,Z(2(#)),l)_10_0" (formula "10") (term "0"))
      (rule "replaceKnownQuery_Helper_pow(heap,Z(2(#)),l)_10_0" (formula "9") (term "0,0"))
      (rule "replaceKnownQuery_Helper_pow(heap,Z(2(#)),l)_10_0" (formula "11") (term "0,0"))
      (rule "replaceKnownQuery_Helper_pow(heap,Z(2(#)),l)_10_0" (formula "11") (term "0,1,1"))
      (rule "notLeft" (formula "1"))
      (rule "eqSymm" (formula "19") (term "0,0,1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "queryResult"))
      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "8"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
      (rule "add_literals" (formula "10") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
      (rule "mul_literals" (formula "10") (term "1"))
      (builtin "Evaluate Query" (formula "1") (term "0,1,1") (newnames "a_0,b_0,callee,queryResult_0,res_pow_0"))
      (rule "replaceKnownQuery_Helper_pow(heap,Z(2(#)),add(Z(1(#)),l))_10_1" (formula "2") (term "0,0"))
      (rule "replaceKnownQuery_Helper_pow(heap,Z(2(#)),add(Z(1(#)),l))_10_1" (formula "2") (term "0,1,1"))
      (rule "notLeft" (formula "1"))
      (rule "eqSymm" (formula "19") (term "0,0,1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "queryResult_0"))
      (rule "methodCallWithAssignmentWithinClass" (formula "20") (term "1") (inst "#v0=x"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_1"))
      (rule "assignment" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "variableDeclarationAssign" (formula "20") (term "1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_1"))
      (rule "assignment" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_pow,savedHeapBefore_pow"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_1"))
      (rule "equality_comparison_simple" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "ifSplit" (formula "20"))
      (branch "if x_1 true"
         (builtin "One Step Simplification" (formula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "17"))
         (rule "times_zero_2" (formula "17") (term "1,0"))
         (rule "add_zero_right" (formula "17") (term "0"))
         (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "1"))
         (rule "add_zero_right" (formula "20") (term "0,1,1,0"))
         (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
         (rule "mul_literals" (formula "16") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "13"))
         (rule "leq_literals" (formula "16") (term "0"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "methodCallReturn" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "assignment" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "methodCallEmpty" (formula "19") (term "1"))
         (rule "blockEmpty" (formula "19") (term "1"))
         (rule "assignment" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "methodCallEmpty" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "emptyModality" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "notRight" (formula "19"))
         (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "1"))
         (rule "mul_literals" (formula "12") (term "1,1"))
         (rule "polySimp_addComm1" (formula "12") (term "1"))
         (rule "add_literals" (formula "12") (term "0,1"))
         (rule "add_zero_left" (formula "12") (term "1"))
         (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
         (rule "polySimp_elimOneLeft0" (formula "10") (term "0"))
         (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "1"))
         (rule "polySimp_elimOneLeft0" (formula "10") (term "0"))
         (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "11"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "10"))
         (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "10"))
         (rule "applyEq" (formula "15") (term "0") (ifseqformula "10"))
         (rule "applyEq" (formula "12") (term "0") (ifseqformula "10"))
         (rule "inEqSimp_homoInEq0" (formula "12"))
         (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
         (rule "add_literals" (formula "12") (term "1,0"))
         (rule "times_zero_1" (formula "12") (term "0"))
         (rule "qeq_literals" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "10"))
         (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
         (rule "inEqSimp_homoInEq1" (formula "10"))
         (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
         (rule "add_literals" (formula "10") (term "1,0"))
         (rule "times_zero_1" (formula "10") (term "0"))
         (rule "leq_literals" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "7"))
         (rule "mul_literals" (formula "10") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0"))
         (rule "add_literals" (formula "10") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1"))
         (rule "inEqSimp_subsumption6" (formula "10") (ifseqformula "12"))
         (rule "greater_literals" (formula "10") (term "0,0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "mul_literals" (formula "10") (term "1,0"))
         (rule "leq_literals" (formula "10") (term "0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "div_axiom" (formula "4") (term "0") (inst "quotient=quotient_1"))
         (rule "qeq_literals" (formula "4") (term "0,1,1"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "equal_literals" (formula "4") (term "0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "mul_literals" (formula "4") (term "1,1,1"))
         (rule "andLeft" (formula "4"))
         (rule "andLeft" (formula "4"))
         (rule "polySimp_addComm1" (formula "6") (term "1"))
         (rule "add_literals" (formula "6") (term "0,1"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "inEqSimp_homoInEq1" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
         (rule "polySimp_addComm1" (formula "6") (term "0"))
         (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "4"))
         (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "4"))
         (rule "applyEq" (formula "14") (term "0") (ifseqformula "4"))
         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "4"))
         (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "4"))
         (rule "applyEq" (formula "7") (term "1") (ifseqformula "4"))
         (rule "applyEq" (formula "10") (term "1") (ifseqformula "4"))
         (rule "inEqSimp_sepPosMonomial0" (formula "6"))
         (rule "polySimp_mulComm0" (formula "6") (term "1"))
         (rule "polySimp_rightDist" (formula "6") (term "1"))
         (rule "mul_literals" (formula "6") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "13"))
         (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
         (rule "polySimp_addComm0" (formula "5") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "5"))
         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
         (rule "inEqSimp_subsumption4" (formula "5") (ifseqformula "8"))
         (rule "mul_literals" (formula "5") (term "0,1,0"))
         (rule "greater_literals" (formula "5") (term "0,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "leq_literals" (formula "5") (term "0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
         (rule "mul_literals" (formula "11") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0"))
         (rule "add_literals" (formula "11") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
         (rule "mul_literals" (formula "11") (term "1"))
         (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "13"))
         (rule "greater_literals" (formula "11") (term "0,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "mul_literals" (formula "11") (term "1,0"))
         (rule "leq_literals" (formula "11") (term "0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "jdiv_axiom" (formula "9") (term "0"))
         (rule "eqSymm" (formula "9"))
         (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "6"))
         (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "polySimp_homoEq" (formula "9") (term "1"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
         (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
         (rule "polySimp_sepPosMonomial" (formula "9") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "12"))
         (rule "leq_literals" (formula "9") (term "0,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "methodCallWithAssignmentWithinClass" (formula "15") (term "1") (inst "#v0=x"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_181"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_5"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "b_5"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_pow_3,savedHeapBefore_pow_3"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_182"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_182"))
         (rule "equality_comparison_simple" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "equal_literals" (formula "15") (term "0,0,1,0"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "ifSplit" (formula "15"))
         (branch "if x_182 true"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_182 false"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "res_4"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "for_to_while" (formula "15") (term "1") (inst "#outerLabel=_label63") (inst "#innerLabel=_label62"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "i_4"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "loopUnwind" (formula "15") (term "1") (inst "#outerLabel=_label65") (inst "#innerLabel=_label64"))
            (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_182"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_183"))
            (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_185") (inst "#v0=x_184"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_184"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_185"))
            (rule "assignmentSubtractionInt" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
            (rule "sub_literals" (formula "15") (term "0,1,0"))
            (rule "less_than_comparison_simple" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "less_literals" (formula "15") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "ifSplit" (formula "15"))
            (branch "if x_183 true"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_183 false"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "blockEmpty" (formula "15") (term "1"))
               (rule "methodCallReturn" (formula "15") (term "1"))
               (rule "assignment" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "methodCallEmpty" (formula "15") (term "1"))
               (rule "blockEmpty" (formula "15") (term "1"))
               (rule "assignment" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "methodCallEmpty" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "emptyModality" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "notRight" (formula "15"))
               (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "1"))
               (rule "mul_literals" (formula "4") (term "1,1"))
               (rule "polySimp_addComm0" (formula "4") (term "1"))
               (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "4") (term "0"))
               (rule "inEqSimp_homoInEq0" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "mul_literals" (formula "4") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "9"))
               (rule "andLeft" (formula "4"))
               (rule "inEqSimp_homoInEq1" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
               (rule "polySimp_rightDist" (formula "4") (term "1,0"))
               (rule "mul_literals" (formula "4") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
               (rule "add_literals" (formula "4") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
               (rule "add_literals" (formula "4") (term "1,1,0"))
               (rule "times_zero_1" (formula "4") (term "1,0"))
               (rule "add_zero_right" (formula "4") (term "0"))
               (rule "leq_literals" (formula "4"))
               (rule "closeFalse" (formula "4"))
            )
         )
      )
      (branch "if x_1 false"
         (builtin "One Step Simplification" (formula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "variableDeclarationAssign" (formula "21") (term "1"))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "res"))
         (rule "assignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "19"))
         (rule "add_zero_right" (formula "15") (term "1"))
         (rule "inEqSimp_contradEq7" (formula "19") (ifseqformula "15"))
         (rule "times_zero_1" (formula "19") (term "1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0"))
         (rule "leq_literals" (formula "19") (term "0"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "false_right" (formula "19"))
         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
         (rule "mul_literals" (formula "15") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0"))
         (rule "add_literals" (formula "15") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15"))
         (rule "mul_literals" (formula "15") (term "1"))
         (rule "for_to_while" (formula "20") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "i"))
         (rule "assignment" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
         (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_2"))
         (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_4"))
         (rule "assignmentSubtractionInt" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
         (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
         (rule "mul_literals" (formula "20") (term "1,0,1,0"))
         (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
         (rule "less_than_comparison_simple" (formula "20") (term "1"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
         (rule "add_zero_right" (formula "20") (term "0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
         (rule "ifSplit" (formula "20"))
         (branch "if x_2 true"
            (builtin "One Step Simplification" (formula "21"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "1"))
            (rule "leq_literals" (formula "16") (term "0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
            (rule "mul_literals" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
            (rule "leq_literals" (formula "14") (term "0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "compound_assignment_op_mul" (formula "20") (term "1"))
            (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_17"))
            (rule "remove_parentheses_right" (formula "20") (term "1"))
            (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_19") (inst "#v0=x_18"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_18"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_19"))
            (rule "remove_parentheses_right" (formula "20") (term "1"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "20") (term "1"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "blockEmpty" (formula "20") (term "1"))
            (rule "postincrement" (formula "20") (term "1"))
            (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_20"))
            (rule "remove_parentheses_right" (formula "20") (term "1"))
            (rule "assignmentAdditionInt" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
            (rule "add_zero_left" (formula "20") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "20") (term "1"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "blockEmpty" (formula "20") (term "1"))
            (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label11") (inst "#innerLabel=_label10"))
            (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_21"))
            (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_23") (inst "#v0=x_22"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_22"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_23"))
            (rule "assignmentSubtractionInt" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
            (rule "mul_literals" (formula "20") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
            (rule "less_than_comparison_simple" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
            (rule "ifSplit" (formula "20"))
            (branch "if x_21 true"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
               (rule "leq_literals" (formula "3") (term "0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
               (rule "leq_literals" (formula "3") (term "0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "compound_assignment_op_mul" (formula "20") (term "1"))
               (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_43"))
               (rule "remove_parentheses_right" (formula "20") (term "1"))
               (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_45") (inst "#v0=x_44"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_44"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_45"))
               (rule "remove_parentheses_right" (formula "20") (term "1"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "20") (term "1"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "blockEmpty" (formula "20") (term "1"))
               (rule "postincrement" (formula "20") (term "1"))
               (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_46"))
               (rule "remove_parentheses_right" (formula "20") (term "1"))
               (rule "assignmentAdditionInt" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
               (rule "add_literals" (formula "20") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "20") (term "1"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "blockEmpty" (formula "20") (term "1"))
               (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label21") (inst "#innerLabel=_label20"))
               (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_47"))
               (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_49") (inst "#v0=x_48"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_48"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_49"))
               (rule "assignmentSubtractionInt" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
               (rule "mul_literals" (formula "20") (term "1,0,1,0"))
               (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
               (rule "less_than_comparison_simple" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
               (rule "ifSplit" (formula "20"))
               (branch "if x_47 true"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                  (rule "leq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                  (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_76"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_78") (inst "#v0=x_77"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_77"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_78"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "postincrement" (formula "20") (term "1"))
                  (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_79"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "assignmentAdditionInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                  (rule "add_literals" (formula "20") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label33") (inst "#innerLabel=_label32"))
                  (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_80"))
                  (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_82") (inst "#v0=x_81"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_81"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_82"))
                  (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                  (rule "less_than_comparison_simple" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                  (rule "ifSplit" (formula "20"))
                  (branch "if x_80 true"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                     (rule "mul_literals" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                     (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_83"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_85") (inst "#v0=x_84"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_84"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_85"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "postincrement" (formula "20") (term "1"))
                     (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_86"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "assignmentAdditionInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label35") (inst "#innerLabel=_label34"))
                     (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_87"))
                     (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_89") (inst "#v0=x_88"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_88"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_89"))
                     (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                     (rule "less_than_comparison_simple" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                     (rule "ifSplit" (formula "20"))
                     (branch "if x_87 true"
                        (builtin "One Step Simplification" (formula "21"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                        (rule "leq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                        (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_90"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_92") (inst "#v0=x_91"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_91"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_92"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "blockEmpty" (formula "20") (term "1"))
                        (rule "postincrement" (formula "20") (term "1"))
                        (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_93"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "assignmentAdditionInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                        (rule "add_literals" (formula "20") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "blockEmpty" (formula "20") (term "1"))
                        (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label37") (inst "#innerLabel=_label36"))
                        (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_94"))
                        (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_96") (inst "#v0=x_95"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_95"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_96"))
                        (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                        (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                        (rule "less_than_comparison_simple" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                        (rule "ifSplit" (formula "20"))
                        (branch "if x_94 true"
                           (builtin "One Step Simplification" (formula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                           (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_97"))
                           (rule "remove_parentheses_right" (formula "20") (term "1"))
                           (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_99") (inst "#v0=x_98"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_98"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_99"))
                           (rule "remove_parentheses_right" (formula "20") (term "1"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "20") (term "1"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "blockEmpty" (formula "20") (term "1"))
                           (rule "postincrement" (formula "20") (term "1"))
                           (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_100"))
                           (rule "remove_parentheses_right" (formula "20") (term "1"))
                           (rule "assignmentAdditionInt" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                           (rule "add_literals" (formula "20") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "20") (term "1"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "blockEmpty" (formula "20") (term "1"))
                           (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label39") (inst "#innerLabel=_label38"))
                           (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_101"))
                           (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_103") (inst "#v0=x_102"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_102"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "variableDeclarationAssign" (formula "20") (term "1"))
                           (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_103"))
                           (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                           (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                           (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                           (rule "less_than_comparison_simple" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                           (rule "ifSplit" (formula "20"))
                           (branch "if x_101 true"
                              (builtin "One Step Simplification" (formula "21"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                              (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_104"))
                              (rule "remove_parentheses_right" (formula "20") (term "1"))
                              (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_106") (inst "#v0=x_105"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_105"))
                              (rule "assignment" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_106"))
                              (rule "remove_parentheses_right" (formula "20") (term "1"))
                              (rule "assignment" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "20") (term "1"))
                              (rule "assignment" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "blockEmpty" (formula "20") (term "1"))
                              (rule "postincrement" (formula "20") (term "1"))
                              (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_107"))
                              (rule "remove_parentheses_right" (formula "20") (term "1"))
                              (rule "assignmentAdditionInt" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "20") (term "1"))
                              (rule "assignment" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "blockEmpty" (formula "20") (term "1"))
                              (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label41") (inst "#innerLabel=_label40"))
                              (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_108"))
                              (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_110") (inst "#v0=x_109"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_109"))
                              (rule "assignment" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "variableDeclarationAssign" (formula "20") (term "1"))
                              (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_110"))
                              (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                              (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                              (rule "less_than_comparison_simple" (formula "20") (term "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                              (rule "ifSplit" (formula "20"))
                              (branch "if x_108 true"
                                 (builtin "One Step Simplification" (formula "21"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_111"))
                                 (rule "remove_parentheses_right" (formula "20") (term "1"))
                                 (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_113") (inst "#v0=x_112"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_112"))
                                 (rule "assignment" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_113"))
                                 (rule "remove_parentheses_right" (formula "20") (term "1"))
                                 (rule "assignment" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                 (rule "assignment" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "blockEmpty" (formula "20") (term "1"))
                                 (rule "postincrement" (formula "20") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_114"))
                                 (rule "remove_parentheses_right" (formula "20") (term "1"))
                                 (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                 (rule "assignment" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "blockEmpty" (formula "20") (term "1"))
                                 (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label43") (inst "#innerLabel=_label42"))
                                 (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_115"))
                                 (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_117") (inst "#v0=x_116"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_116"))
                                 (rule "assignment" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                 (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_117"))
                                 (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                 (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                 (rule "ifSplit" (formula "20"))
                                 (branch "if x_115 true"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_118"))
                                    (rule "remove_parentheses_right" (formula "20") (term "1"))
                                    (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_120") (inst "#v0=x_119"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_119"))
                                    (rule "assignment" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_120"))
                                    (rule "remove_parentheses_right" (formula "20") (term "1"))
                                    (rule "assignment" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                    (rule "assignment" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "blockEmpty" (formula "20") (term "1"))
                                    (rule "postincrement" (formula "20") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_121"))
                                    (rule "remove_parentheses_right" (formula "20") (term "1"))
                                    (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                    (rule "assignment" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "blockEmpty" (formula "20") (term "1"))
                                    (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label45") (inst "#innerLabel=_label44"))
                                    (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_122"))
                                    (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_124") (inst "#v0=x_123"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_123"))
                                    (rule "assignment" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                    (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_124"))
                                    (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                    (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                    (rule "ifSplit" (formula "20"))
                                    (branch "if x_122 true"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                       (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_125"))
                                       (rule "remove_parentheses_right" (formula "20") (term "1"))
                                       (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_127") (inst "#v0=x_126"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_126"))
                                       (rule "assignment" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_127"))
                                       (rule "remove_parentheses_right" (formula "20") (term "1"))
                                       (rule "assignment" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                       (rule "assignment" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "blockEmpty" (formula "20") (term "1"))
                                       (rule "postincrement" (formula "20") (term "1"))
                                       (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_128"))
                                       (rule "remove_parentheses_right" (formula "20") (term "1"))
                                       (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,1,0"))
                                       (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                       (rule "assignment" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "blockEmpty" (formula "20") (term "1"))
                                       (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label47") (inst "#innerLabel=_label46"))
                                       (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_129"))
                                       (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_131") (inst "#v0=x_130"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_130"))
                                       (rule "assignment" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                       (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_131"))
                                       (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                       (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                       (rule "ifSplit" (formula "20"))
                                       (branch "if x_129 true"
                                          (builtin "One Step Simplification" (formula "21"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                          (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_132"))
                                          (rule "remove_parentheses_right" (formula "20") (term "1"))
                                          (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_134") (inst "#v0=x_133"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_133"))
                                          (rule "assignment" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_134"))
                                          (rule "remove_parentheses_right" (formula "20") (term "1"))
                                          (rule "assignment" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                          (rule "assignment" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "blockEmpty" (formula "20") (term "1"))
                                          (rule "postincrement" (formula "20") (term "1"))
                                          (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_135"))
                                          (rule "remove_parentheses_right" (formula "20") (term "1"))
                                          (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                          (rule "add_literals" (formula "20") (term "0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                          (rule "assignment" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "blockEmpty" (formula "20") (term "1"))
                                          (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label49") (inst "#innerLabel=_label48"))
                                          (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_136"))
                                          (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_138") (inst "#v0=x_137"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_137"))
                                          (rule "assignment" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                          (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_138"))
                                          (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                          (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                          (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                          (rule "ifSplit" (formula "20"))
                                          (branch "if x_136 true"
                                             (builtin "One Step Simplification" (formula "21"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                             (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_139"))
                                             (rule "remove_parentheses_right" (formula "20") (term "1"))
                                             (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_141") (inst "#v0=x_140"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_140"))
                                             (rule "assignment" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_141"))
                                             (rule "remove_parentheses_right" (formula "20") (term "1"))
                                             (rule "assignment" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0"))
                                             (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                             (rule "assignment" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "blockEmpty" (formula "20") (term "1"))
                                             (rule "postincrement" (formula "20") (term "1"))
                                             (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_142"))
                                             (rule "remove_parentheses_right" (formula "20") (term "1"))
                                             (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                             (rule "add_literals" (formula "20") (term "0,1,0"))
                                             (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                             (rule "assignment" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "blockEmpty" (formula "20") (term "1"))
                                             (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label51") (inst "#innerLabel=_label50"))
                                             (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_143"))
                                             (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_145") (inst "#v0=x_144"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_144"))
                                             (rule "assignment" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                             (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_145"))
                                             (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                             (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                             (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                             (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                             (rule "ifSplit" (formula "20"))
                                             (branch "if x_143 true"
                                                (builtin "One Step Simplification" (formula "21"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                                (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_146"))
                                                (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_148") (inst "#v0=x_147"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_147"))
                                                (rule "assignment" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_148"))
                                                (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                (rule "assignment" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                (rule "assignment" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "blockEmpty" (formula "20") (term "1"))
                                                (rule "postincrement" (formula "20") (term "1"))
                                                (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_149"))
                                                (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                                (rule "add_literals" (formula "20") (term "0,1,0"))
                                                (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                (rule "assignment" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "blockEmpty" (formula "20") (term "1"))
                                                (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label53") (inst "#innerLabel=_label52"))
                                                (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_150"))
                                                (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_152") (inst "#v0=x_151"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_151"))
                                                (rule "assignment" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_152"))
                                                (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                                (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                                (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                                (rule "ifSplit" (formula "20"))
                                                (branch "if x_150 true"
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                                   (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_153"))
                                                   (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                   (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_155") (inst "#v0=x_154"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_154"))
                                                   (rule "assignment" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_155"))
                                                   (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                   (rule "assignment" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                   (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                   (rule "assignment" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "blockEmpty" (formula "20") (term "1"))
                                                   (rule "postincrement" (formula "20") (term "1"))
                                                   (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_156"))
                                                   (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                   (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                                   (rule "add_literals" (formula "20") (term "0,1,0"))
                                                   (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                   (rule "assignment" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "blockEmpty" (formula "20") (term "1"))
                                                   (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label55") (inst "#innerLabel=_label54"))
                                                   (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_157"))
                                                   (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_159") (inst "#v0=x_158"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_158"))
                                                   (rule "assignment" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                   (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_159"))
                                                   (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                                   (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                                   (rule "ifSplit" (formula "20"))
                                                   (branch "if x_157 true"
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                                      (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_160"))
                                                      (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                      (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_162") (inst "#v0=x_161"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_161"))
                                                      (rule "assignment" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_162"))
                                                      (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                      (rule "assignment" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                      (rule "assignment" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "blockEmpty" (formula "20") (term "1"))
                                                      (rule "postincrement" (formula "20") (term "1"))
                                                      (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_163"))
                                                      (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                      (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,1,0"))
                                                      (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                      (rule "assignment" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "blockEmpty" (formula "20") (term "1"))
                                                      (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label57") (inst "#innerLabel=_label56"))
                                                      (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_164"))
                                                      (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_166") (inst "#v0=x_165"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_165"))
                                                      (rule "assignment" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_166"))
                                                      (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                                      (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                                      (rule "ifSplit" (formula "20"))
                                                      (branch "if x_164 true"
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                                                         (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_167"))
                                                         (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                         (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_169") (inst "#v0=x_168"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_168"))
                                                         (rule "assignment" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_169"))
                                                         (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                         (rule "assignment" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                         (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                         (rule "assignment" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "blockEmpty" (formula "20") (term "1"))
                                                         (rule "postincrement" (formula "20") (term "1"))
                                                         (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_1"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_170"))
                                                         (rule "remove_parentheses_right" (formula "20") (term "1"))
                                                         (rule "assignmentAdditionInt" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,1,0"))
                                                         (rule "widening_identity_cast_5" (formula "20") (term "1"))
                                                         (rule "assignment" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "blockEmpty" (formula "20") (term "1"))
                                                         (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label59") (inst "#innerLabel=_label58"))
                                                         (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_171"))
                                                         (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_173") (inst "#v0=x_172"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_172"))
                                                         (rule "assignment" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "variableDeclarationAssign" (formula "20") (term "1"))
                                                         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_173"))
                                                         (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "20") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "1,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                                         (rule "less_than_comparison_simple" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0"))
                                                         (rule "ifSplit" (formula "20"))
                                                         (branch "if x_171 true"
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "3") (term "0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "16"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "3") (term "0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                                            (rule "leq_literals" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "applyEq" (formula "14") (term "1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "6"))
                                                            (rule "applyEq" (formula "10") (term "1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "1"))
                                                            (rule "add_literals" (formula "16") (term "1"))
                                                            (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "12") (term "1,0,1") (ifseqformula "1"))
                                                            (rule "add_literals" (formula "12") (term "0,1"))
                                                            (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "5"))
                                                            (rule "greater_literals" (formula "6") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "0,0"))
                                                            (rule "leq_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "15"))
                                                            (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                                            (rule "leq_literals" (formula "16"))
                                                            (rule "true_left" (formula "16"))
                                                            (rule "applyEq" (formula "18") (term "0,1,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "17") (term "1,0,1,1,0") (ifseqformula "2"))
                                                            (rule "add_literals" (formula "17") (term "0,1,1,0"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "12"))
                                                            (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                            (rule "inEqSimp_subsumption4" (formula "6") (ifseqformula "5"))
                                                            (rule "greater_literals" (formula "6") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "mul_literals" (formula "6") (term "0,0"))
                                                            (rule "leq_literals" (formula "6") (term "0"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "9"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                            (rule "add_literals" (formula "11") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                            (rule "mul_literals" (formula "11") (term "1"))
                                                            (rule "divide_inEq0" (formula "9") (inst "divY=n") (ifseqformula "10"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "qeq_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "div_literals" (formula "9") (term "1,1"))
                                                            (rule "qeq_literals" (formula "9") (term "0"))
                                                            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "13")))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "divide_inEq0" (formula "9") (inst "divY=res_pow") (ifseqformula "14"))
                                                            (rule "qeq_literals" (formula "9") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "qeq_literals" (formula "9") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "div_literals" (formula "9") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "9"))
                                                            (rule "compound_assignment_op_mul" (formula "18") (term "1"))
                                                            (rule "compound_int_cast_expression" (formula "18") (term "1") (inst "#v=x_1"))
                                                            (rule "variableDeclarationAssign" (formula "18") (term "1"))
                                                            (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_174"))
                                                            (rule "remove_parentheses_right" (formula "18") (term "1"))
                                                            (rule "compound_multiplication_2" (formula "18") (term "1") (inst "#v1=x_176") (inst "#v0=x_175"))
                                                            (rule "variableDeclarationAssign" (formula "18") (term "1"))
                                                            (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_175"))
                                                            (rule "assignment" (formula "18") (term "1"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "variableDeclarationAssign" (formula "18") (term "1"))
                                                            (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_176"))
                                                            (rule "remove_parentheses_right" (formula "18") (term "1"))
                                                            (rule "assignment" (formula "18") (term "1"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "assignmentMultiplicationInt" (formula "18") (term "1"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "translateJavaMulInt" (formula "18") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                            (rule "widening_identity_cast_5" (formula "18") (term "1"))
                                                            (rule "assignment" (formula "18") (term "1"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "blockEmpty" (formula "18") (term "1"))
                                                            (rule "postincrement" (formula "18") (term "1"))
                                                            (rule "compound_int_cast_expression" (formula "18") (term "1") (inst "#v=x_1"))
                                                            (rule "variableDeclarationAssign" (formula "18") (term "1"))
                                                            (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_177"))
                                                            (rule "remove_parentheses_right" (formula "18") (term "1"))
                                                            (rule "assignmentAdditionInt" (formula "18") (term "1"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "translateJavaAddInt" (formula "18") (term "0,1,0"))
                                                            (rule "add_literals" (formula "18") (term "0,1,0"))
                                                            (rule "widening_identity_cast_5" (formula "18") (term "1"))
                                                            (rule "assignment" (formula "18") (term "1"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "blockEmpty" (formula "18") (term "1"))
                                                            (rule "loopUnwind" (formula "18") (term "1") (inst "#outerLabel=_label61") (inst "#innerLabel=_label60"))
                                                            (rule "ifUnfold" (formula "18") (term "1") (inst "#boolv=x_1"))
                                                            (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_178"))
                                                            (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v1=x_180") (inst "#v0=x_179"))
                                                            (rule "variableDeclarationAssign" (formula "18") (term "1"))
                                                            (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_179"))
                                                            (rule "assignment" (formula "18") (term "1"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "variableDeclarationAssign" (formula "18") (term "1"))
                                                            (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_180"))
                                                            (rule "assignmentSubtractionInt" (formula "18") (term "1"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "translateJavaSubInt" (formula "18") (term "0,1,0"))
                                                            (rule "sub_literals" (formula "18") (term "0,1,0"))
                                                            (rule "less_than_comparison_simple" (formula "18") (term "1"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "less_literals" (formula "18") (term "0,0,1,0"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "ifSplit" (formula "18"))
                                                            (branch "if x_178 true"
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "if x_178 false"
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "blockEmpty" (formula "18") (term "1"))
                                                               (rule "methodCallReturn" (formula "18") (term "1"))
                                                               (rule "assignment" (formula "18") (term "1"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "methodCallEmpty" (formula "18") (term "1"))
                                                               (rule "blockEmpty" (formula "18") (term "1"))
                                                               (rule "assignment" (formula "18") (term "1"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "methodCallEmpty" (formula "18") (term "1"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "emptyModality" (formula "18") (term "1"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "notRight" (formula "18"))
                                                               (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                               (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "1"))
                                                               (rule "mul_literals" (formula "13") (term "1,1"))
                                                               (rule "add_literals" (formula "13") (term "1"))
                                                               (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
                                                               (rule "leq_literals" (formula "10"))
                                                               (rule "closeFalse" (formula "10"))
                                                            )
                                                         )
                                                         (branch "if x_171 false"
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "inEqSimp_geqRight" (formula "19"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "blockEmpty" (formula "21") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
                                                            (rule "add_literals" (formula "21") (term "0,1,1,0"))
                                                            (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                            (rule "leq_literals" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "17"))
                                                            (rule "mul_literals" (formula "17") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                            (rule "add_literals" (formula "17") (term "0,0"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                            (rule "mul_literals" (formula "16") (term "1"))
                                                            (rule "methodCallReturn" (formula "19") (term "1"))
                                                            (rule "assignment" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "methodCallEmpty" (formula "19") (term "1"))
                                                            (rule "blockEmpty" (formula "19") (term "1"))
                                                            (rule "assignment" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "methodCallEmpty" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "emptyModality" (formula "19") (term "1"))
                                                            (builtin "One Step Simplification" (formula "19"))
                                                            (rule "notRight" (formula "19"))
                                                            (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "applyEq" (formula "12") (term "0,1,1") (ifseqformula "1"))
                                                            (rule "mul_literals" (formula "12") (term "1,1"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "1"))
                                                            (rule "add_literals" (formula "12") (term "0,1"))
                                                            (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "0"))
                                                            (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                            (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                                                            (rule "greater_literals" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                            (rule "mul_literals" (formula "15") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "15"))
                                                            (rule "qeq_literals" (formula "17") (term "0"))
                                                            (builtin "One Step Simplification" (formula "17"))
                                                            (rule "closeFalse" (formula "17"))
                                                         )
                                                      )
                                                      (branch "if x_164 false"
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "inEqSimp_geqRight" (formula "19"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "blockEmpty" (formula "21") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17"))
                                                         (rule "mul_literals" (formula "17") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                         (rule "add_literals" (formula "17") (term "0,0"))
                                                         (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "3"))
                                                         (rule "add_literals" (formula "20") (term "0,1,1,0"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                         (rule "mul_literals" (formula "16") (term "1"))
                                                         (rule "methodCallReturn" (formula "19") (term "1"))
                                                         (rule "assignment" (formula "19") (term "1"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "methodCallEmpty" (formula "19") (term "1"))
                                                         (rule "blockEmpty" (formula "19") (term "1"))
                                                         (rule "assignment" (formula "19") (term "1"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "methodCallEmpty" (formula "19") (term "1"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "emptyModality" (formula "19") (term "1"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "notRight" (formula "19"))
                                                         (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "12"))
                                                         (rule "true_left" (formula "12"))
                                                         (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                         (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "1"))
                                                         (rule "mul_literals" (formula "12") (term "1,1"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "1"))
                                                         (rule "add_literals" (formula "12") (term "0,1"))
                                                         (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "0"))
                                                         (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "9"))
                                                         (rule "greater_literals" (formula "12") (term "0"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                         (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "14"))
                                                         (rule "greater_literals" (formula "13") (term "0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1"))
                                                         (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "2"))
                                                         (rule "greater_literals" (formula "13") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "mul_literals" (formula "13") (term "1,0"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                                                         (rule "greater_literals" (formula "8") (term "0"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                         (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                                         (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "12"))
                                                         (rule "greater_literals" (formula "17") (term "0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                         (rule "mul_literals" (formula "17") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "17"))
                                                         (rule "leq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "18"))
                                                         (rule "qeq_literals" (formula "16") (term "0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "closeFalse" (formula "16"))
                                                      )
                                                   )
                                                   (branch "if x_157 false"
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "inEqSimp_geqRight" (formula "19"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "blockEmpty" (formula "21") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18"))
                                                      (rule "mul_literals" (formula "18") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "0,0"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "2"))
                                                      (rule "add_literals" (formula "20") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                      (rule "mul_literals" (formula "16") (term "1"))
                                                      (rule "methodCallReturn" (formula "19") (term "1"))
                                                      (rule "assignment" (formula "19") (term "1"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "methodCallEmpty" (formula "19") (term "1"))
                                                      (rule "blockEmpty" (formula "19") (term "1"))
                                                      (rule "assignment" (formula "19") (term "1"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "methodCallEmpty" (formula "19") (term "1"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "emptyModality" (formula "19") (term "1"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "notRight" (formula "19"))
                                                      (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                      (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                      (rule "applyEqRigid" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "mul_literals" (formula "12") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                      (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                                                      (rule "greater_literals" (formula "15") (term "0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "15"))
                                                      (rule "qeq_literals" (formula "17") (term "0"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                )
                                                (branch "if x_150 false"
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "19"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "blockEmpty" (formula "21") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "0,0"))
                                                   (rule "applyEq" (formula "19") (term "1,0,1,1,0") (ifseqformula "2"))
                                                   (rule "add_literals" (formula "19") (term "0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1"))
                                                   (rule "methodCallReturn" (formula "19") (term "1"))
                                                   (rule "assignment" (formula "19") (term "1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "methodCallEmpty" (formula "19") (term "1"))
                                                   (rule "blockEmpty" (formula "19") (term "1"))
                                                   (rule "assignment" (formula "19") (term "1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "methodCallEmpty" (formula "19") (term "1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "emptyModality" (formula "19") (term "1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "notRight" (formula "19"))
                                                   (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "1"))
                                                   (rule "mul_literals" (formula "13") (term "1,1"))
                                                   (rule "polySimp_addComm1" (formula "13") (term "1"))
                                                   (rule "add_literals" (formula "13") (term "0,1"))
                                                   (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                                   (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                   (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "13"))
                                                   (rule "greater_literals" (formula "12") (term "0"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "12") (term "0"))
                                                   (rule "add_literals" (formula "12") (term "1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                   (rule "mul_literals" (formula "12") (term "1"))
                                                   (rule "inEqSimp_subsumption6" (formula "12") (ifseqformula "2"))
                                                   (rule "greater_literals" (formula "12") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "mul_literals" (formula "12") (term "1,0"))
                                                   (rule "leq_literals" (formula "12") (term "0"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "9"))
                                                   (rule "greater_literals" (formula "12") (term "0"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                                   (rule "add_literals" (formula "12") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                   (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                                                   (rule "greater_literals" (formula "8") (term "0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                                   (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "12"))
                                                   (rule "greater_literals" (formula "17") (term "0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                   (rule "mul_literals" (formula "17") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "19"))
                                                   (rule "qeq_literals" (formula "17") (term "0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "closeFalse" (formula "17"))
                                                )
                                             )
                                             (branch "if x_143 false"
                                                (builtin "One Step Simplification" (formula "21"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "inEqSimp_geqRight" (formula "19"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "blockEmpty" (formula "21") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "17"))
                                                (rule "mul_literals" (formula "17") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                (rule "add_literals" (formula "17") (term "0,0"))
                                                (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "3"))
                                                (rule "add_literals" (formula "20") (term "0,1,1,0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "methodCallReturn" (formula "19") (term "1"))
                                                (rule "assignment" (formula "19") (term "1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "methodCallEmpty" (formula "19") (term "1"))
                                                (rule "blockEmpty" (formula "19") (term "1"))
                                                (rule "assignment" (formula "19") (term "1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "methodCallEmpty" (formula "19") (term "1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "emptyModality" (formula "19") (term "1"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "notRight" (formula "19"))
                                                (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                                (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "12") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                                (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                                                (rule "greater_literals" (formula "8") (term "0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                                (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "12"))
                                                (rule "greater_literals" (formula "16") (term "0"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "18"))
                                                (rule "qeq_literals" (formula "16") (term "0"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "closeFalse" (formula "16"))
                                             )
                                          )
                                          (branch "if x_136 false"
                                             (builtin "One Step Simplification" (formula "21"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "inEqSimp_geqRight" (formula "19"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "blockEmpty" (formula "21") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "3"))
                                             (rule "add_literals" (formula "20") (term "0,1,1,0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "0,0"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1"))
                                             (rule "methodCallReturn" (formula "19") (term "1"))
                                             (rule "assignment" (formula "19") (term "1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "methodCallEmpty" (formula "19") (term "1"))
                                             (rule "blockEmpty" (formula "19") (term "1"))
                                             (rule "assignment" (formula "19") (term "1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "methodCallEmpty" (formula "19") (term "1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "emptyModality" (formula "19") (term "1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "notRight" (formula "19"))
                                             (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                             (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "12") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                                             (rule "greater_literals" (formula "8") (term "0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                             (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "12"))
                                             (rule "greater_literals" (formula "16") (term "0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "16"))
                                             (rule "qeq_literals" (formula "18") (term "0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "closeFalse" (formula "18"))
                                          )
                                       )
                                       (branch "if x_129 false"
                                          (builtin "One Step Simplification" (formula "21"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "inEqSimp_geqRight" (formula "19"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "blockEmpty" (formula "21") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "3"))
                                          (rule "add_literals" (formula "20") (term "0,1,1,0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "16"))
                                          (rule "mul_literals" (formula "16") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "add_literals" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                          (rule "mul_literals" (formula "16") (term "1"))
                                          (rule "methodCallReturn" (formula "19") (term "1"))
                                          (rule "assignment" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "methodCallEmpty" (formula "19") (term "1"))
                                          (rule "blockEmpty" (formula "19") (term "1"))
                                          (rule "assignment" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "methodCallEmpty" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "emptyModality" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "notRight" (formula "19"))
                                          (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                          (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "12") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                          (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                                          (rule "greater_literals" (formula "8") (term "0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                          (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "10"))
                                          (rule "greater_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                          (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "12"))
                                          (rule "greater_literals" (formula "17") (term "0"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "18"))
                                          (rule "qeq_literals" (formula "16") (term "0"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "closeFalse" (formula "16"))
                                       )
                                    )
                                    (branch "if x_122 false"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "inEqSimp_geqRight" (formula "19"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "blockEmpty" (formula "21") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "0,0"))
                                       (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
                                       (rule "add_literals" (formula "21") (term "0,1,1,0"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "methodCallReturn" (formula "19") (term "1"))
                                       (rule "assignment" (formula "19") (term "1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "methodCallEmpty" (formula "19") (term "1"))
                                       (rule "blockEmpty" (formula "19") (term "1"))
                                       (rule "assignment" (formula "19") (term "1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "methodCallEmpty" (formula "19") (term "1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "emptyModality" (formula "19") (term "1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "notRight" (formula "19"))
                                       (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "13") (term "1,1"))
                                       (rule "polySimp_addComm1" (formula "13") (term "1"))
                                       (rule "add_literals" (formula "13") (term "0,1"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                       (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                       (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                                       (rule "greater_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "15") (term "0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "closeFalse" (formula "15"))
                                    )
                                 )
                                 (branch "if x_115 false"
                                    (builtin "One Step Simplification" (formula "21"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "inEqSimp_geqRight" (formula "19"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "blockEmpty" (formula "21") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "18"))
                                    (rule "mul_literals" (formula "18") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "0,0"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "19") (term "1,0,1,1,0") (ifseqformula "2"))
                                    (rule "add_literals" (formula "19") (term "0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1"))
                                    (rule "methodCallReturn" (formula "19") (term "1"))
                                    (rule "assignment" (formula "19") (term "1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "methodCallEmpty" (formula "19") (term "1"))
                                    (rule "blockEmpty" (formula "19") (term "1"))
                                    (rule "assignment" (formula "19") (term "1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "methodCallEmpty" (formula "19") (term "1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "emptyModality" (formula "19") (term "1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "notRight" (formula "19"))
                                    (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "13") (term "1,1"))
                                    (rule "polySimp_addComm1" (formula "13") (term "1"))
                                    (rule "add_literals" (formula "13") (term "0,1"))
                                    (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                    (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                                    (rule "greater_literals" (formula "8") (term "0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                    (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,1"))
                                    (rule "greater_literals" (formula "16") (term "0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "16"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                              )
                              (branch "if x_108 false"
                                 (builtin "One Step Simplification" (formula "21"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "inEqSimp_geqRight" (formula "19"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "blockEmpty" (formula "21") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "add_literals" (formula "18") (term "0,0"))
                                 (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
                                 (rule "add_literals" (formula "21") (term "0,1,1,0"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                 (rule "mul_literals" (formula "16") (term "1"))
                                 (rule "methodCallReturn" (formula "19") (term "1"))
                                 (rule "assignment" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "methodCallEmpty" (formula "19") (term "1"))
                                 (rule "blockEmpty" (formula "19") (term "1"))
                                 (rule "assignment" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "methodCallEmpty" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "emptyModality" (formula "19") (term "1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "notRight" (formula "19"))
                                 (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "13"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "0"))
                                 (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "12") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "9"))
                                 (rule "greater_literals" (formula "12") (term "0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "14"))
                                 (rule "greater_literals" (formula "13") (term "0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "2"))
                                 (rule "greater_literals" (formula "13") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1,0"))
                                 (rule "leq_literals" (formula "13") (term "0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "inEqSimp_exactShadow2" (formula "16") (ifseqformula "11"))
                                 (rule "greater_literals" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                 (rule "mul_literals" (formula "16") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "16"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "closeFalse" (formula "18"))
                              )
                           )
                           (branch "if x_101 false"
                              (builtin "One Step Simplification" (formula "21"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "inEqSimp_geqRight" (formula "19"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "blockEmpty" (formula "21") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "17"))
                              (rule "mul_literals" (formula "17") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "19") (term "1,0,1,1,0") (ifseqformula "2"))
                              (rule "add_literals" (formula "19") (term "0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                              (rule "mul_literals" (formula "16") (term "1"))
                              (rule "methodCallReturn" (formula "19") (term "1"))
                              (rule "assignment" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "methodCallEmpty" (formula "19") (term "1"))
                              (rule "blockEmpty" (formula "19") (term "1"))
                              (rule "assignment" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "methodCallEmpty" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "emptyModality" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "notRight" (formula "19"))
                              (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "13"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0"))
                              (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "applyEqRigid" (formula "12") (term "0,1,0") (ifseqformula "1"))
                              (rule "mul_literals" (formula "12") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                              (rule "greater_literals" (formula "15") (term "0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                              (rule "mul_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "16"))
                              (rule "qeq_literals" (formula "14") (term "0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "closeFalse" (formula "14"))
                           )
                        )
                        (branch "if x_94 false"
                           (builtin "One Step Simplification" (formula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "inEqSimp_geqRight" (formula "19"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "blockEmpty" (formula "21") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "leq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "0,0"))
                           (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "2"))
                           (rule "add_literals" (formula "20") (term "0,1,1,0"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                           (rule "mul_literals" (formula "16") (term "1"))
                           (rule "methodCallReturn" (formula "19") (term "1"))
                           (rule "assignment" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "methodCallEmpty" (formula "19") (term "1"))
                           (rule "blockEmpty" (formula "19") (term "1"))
                           (rule "assignment" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "methodCallEmpty" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "emptyModality" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "notRight" (formula "19"))
                           (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "11") (term "0"))
                           (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "applyEqRigid" (formula "12") (term "0,1,0") (ifseqformula "1"))
                           (rule "mul_literals" (formula "12") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                           (rule "add_literals" (formula "12") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
                           (rule "greater_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                           (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "10"))
                           (rule "greater_literals" (formula "13") (term "0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "12"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,1"))
                           (rule "greater_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "mul_literals" (formula "17") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "closeFalse" (formula "17"))
                        )
                     )
                     (branch "if x_87 false"
                        (builtin "One Step Simplification" (formula "21"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "inEqSimp_geqRight" (formula "19"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "blockEmpty" (formula "21") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "2"))
                        (rule "add_literals" (formula "20") (term "0,1,1,0"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1"))
                        (rule "methodCallReturn" (formula "19") (term "1"))
                        (rule "assignment" (formula "19") (term "1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "methodCallEmpty" (formula "19") (term "1"))
                        (rule "blockEmpty" (formula "19") (term "1"))
                        (rule "assignment" (formula "19") (term "1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "methodCallEmpty" (formula "19") (term "1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "emptyModality" (formula "19") (term "1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "notRight" (formula "19"))
                        (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0"))
                        (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "0"))
                        (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
                        (rule "mul_literals" (formula "12") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                        (rule "add_literals" (formula "12") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                        (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,1"))
                        (rule "greater_literals" (formula "15") (term "0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "mul_literals" (formula "15") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                        (rule "mul_literals" (formula "15") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
                        (rule "leq_literals" (formula "2") (term "0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "14"))
                        (rule "qeq_literals" (formula "16") (term "0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "closeFalse" (formula "16"))
                     )
                  )
                  (branch "if x_80 false"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_geqRight" (formula "19"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "blockEmpty" (formula "21") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                     (rule "add_literals" (formula "18") (term "0,0"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "applyEq" (formula "20") (term "1,0,1,1,0") (ifseqformula "3"))
                     (rule "add_literals" (formula "20") (term "0,1,1,0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "methodCallReturn" (formula "19") (term "1"))
                     (rule "assignment" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "methodCallEmpty" (formula "19") (term "1"))
                     (rule "blockEmpty" (formula "19") (term "1"))
                     (rule "assignment" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "methodCallEmpty" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "emptyModality" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "notRight" (formula "19"))
                     (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0"))
                     (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
                     (rule "mul_literals" (formula "12") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,1"))
                     (rule "greater_literals" (formula "15") (term "0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "17") (term "0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "closeFalse" (formula "17"))
                  )
               )
               (branch "if x_47 false"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "19"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "blockEmpty" (formula "21") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                  (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "3"))
                  (rule "add_literals" (formula "21") (term "0,1,1,0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "leq_literals" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "17"))
                  (rule "mul_literals" (formula "17") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "0,0"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "methodCallReturn" (formula "19") (term "1"))
                  (rule "assignment" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "methodCallEmpty" (formula "19") (term "1"))
                  (rule "blockEmpty" (formula "19") (term "1"))
                  (rule "assignment" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "methodCallEmpty" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "emptyModality" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "notRight" (formula "19"))
                  (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
                  (rule "mul_literals" (formula "12") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "inEqSimp_exactShadow2" (formula "15") (ifseqformula "11"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,1"))
                  (rule "greater_literals" (formula "15") (term "0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "mul_literals" (formula "15") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                  (rule "mul_literals" (formula "15") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "15"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow2" (formula "7") (ifseqformula "10"))
                  (rule "greater_literals" (formula "7") (term "0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1"))
                  (rule "inEqSimp_exactShadow1" (formula "12") (ifseqformula "9"))
                  (rule "greater_literals" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                  (rule "mul_literals" (formula "12") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "14"))
                  (rule "greater_literals" (formula "13") (term "0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                  (rule "mul_literals" (formula "13") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                  (rule "mul_literals" (formula "13") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "17"))
                  (rule "greater_literals" (formula "13") (term "0,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "mul_literals" (formula "13") (term "1,0"))
                  (rule "leq_literals" (formula "13") (term "0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "12"))
                  (rule "mul_literals" (formula "16") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "15"))
                  (rule "greater_literals" (formula "16") (term "0,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1,0"))
                  (rule "leq_literals" (formula "16") (term "0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "18"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(6(1(#)))"))
                  (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "7") (term "0,0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                  (rule "add_literals" (formula "7") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0"))
                  (rule "qeq_literals" (formula "7") (term "0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "7"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "12"))
                  (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "16"))
                  (rule "greater_literals" (formula "5") (term "0,0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "mul_literals" (formula "5") (term "1,0"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "6"))
                  (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                  (rule "qeq_literals" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "15"))
                  (rule "mul_literals" (formula "12") (term "1,1"))
                  (rule "add_literals" (formula "12") (term "1"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "15"))
                  (rule "leq_literals" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "14"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "3"))
                  (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "applyEqRigid" (formula "6") (term "0,1") (ifseqformula "14"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "13"))
                  (rule "mul_literals" (formula "7") (term "1,1"))
                  (rule "add_literals" (formula "7") (term "1"))
                  (rule "applyEqRigid" (formula "6") (term "0,1") (ifseqformula "13"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "applyEq" (formula "5") (term "0,1") (ifseqformula "12"))
                  (rule "mul_literals" (formula "5") (term "1"))
                  (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "12"))
                  (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "12"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "15"))
                  (rule "leq_literals" (formula "9") (term "0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "12"))
                  (rule "leq_literals" (formula "5") (term "0"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_exactShadow1" (formula "8") (ifseqformula "5"))
                  (rule "greater_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                  (rule "mul_literals" (formula "8") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "add_literals" (formula "8") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "14"))
                  (rule "leq_literals" (formula "8") (term "0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "methodCallWithAssignmentWithinClass" (formula "15") (term "1") (inst "#v0=x"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_50"))
                  (rule "variableDeclarationAssign" (formula "15") (term "1"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "a_4"))
                  (rule "assignment" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "variableDeclarationAssign" (formula "15") (term "1"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "b_4"))
                  (rule "assignment" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_pow_2,savedHeapBefore_pow_2"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_51"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_51"))
                  (rule "equality_comparison_simple" (formula "15") (term "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "equal_literals" (formula "15") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "ifSplit" (formula "15"))
                  (branch "if x_51 true"
                     (builtin "One Step Simplification" (formula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_51 false"
                     (builtin "One Step Simplification" (formula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "res_3"))
                     (rule "assignment" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "for_to_while" (formula "15") (term "1") (inst "#outerLabel=_label23") (inst "#innerLabel=_label22"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "i_3"))
                     (rule "assignment" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "loopUnwind" (formula "15") (term "1") (inst "#outerLabel=_label25") (inst "#innerLabel=_label24"))
                     (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_51"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_52"))
                     (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_54") (inst "#v0=x_53"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_53"))
                     (rule "assignment" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "variableDeclarationAssign" (formula "15") (term "1"))
                     (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_54"))
                     (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                     (rule "sub_literals" (formula "15") (term "0,1,0"))
                     (rule "less_than_comparison_simple" (formula "15") (term "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "less_literals" (formula "15") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "ifSplit" (formula "15"))
                     (branch "if x_52 true"
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "compound_assignment_op_mul" (formula "15") (term "1"))
                        (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_51"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_55"))
                        (rule "remove_parentheses_right" (formula "15") (term "1"))
                        (rule "compound_multiplication_2" (formula "15") (term "1") (inst "#v1=x_57") (inst "#v0=x_56"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_56"))
                        (rule "assignment" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_57"))
                        (rule "remove_parentheses_right" (formula "15") (term "1"))
                        (rule "assignment" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "assignmentMultiplicationInt" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "translateJavaMulInt" (formula "15") (term "0,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "15") (term "1"))
                        (rule "assignment" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "blockEmpty" (formula "15") (term "1"))
                        (rule "postincrement" (formula "15") (term "1"))
                        (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_51"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_58"))
                        (rule "remove_parentheses_right" (formula "15") (term "1"))
                        (rule "assignmentAdditionInt" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
                        (rule "add_zero_left" (formula "15") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "15") (term "1"))
                        (rule "assignment" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "blockEmpty" (formula "15") (term "1"))
                        (rule "loopUnwind" (formula "15") (term "1") (inst "#outerLabel=_label27") (inst "#innerLabel=_label26"))
                        (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_51"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_59"))
                        (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_61") (inst "#v0=x_60"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_60"))
                        (rule "assignment" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "variableDeclarationAssign" (formula "15") (term "1"))
                        (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_61"))
                        (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                        (rule "sub_literals" (formula "15") (term "0,1,0"))
                        (rule "less_than_comparison_simple" (formula "15") (term "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "less_literals" (formula "15") (term "0,0,1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "ifSplit" (formula "15"))
                        (branch "if x_59 true"
                           (builtin "One Step Simplification" (formula "16"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "compound_assignment_op_mul" (formula "15") (term "1"))
                           (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_51"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_62"))
                           (rule "remove_parentheses_right" (formula "15") (term "1"))
                           (rule "compound_multiplication_2" (formula "15") (term "1") (inst "#v1=x_64") (inst "#v0=x_63"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_63"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_64"))
                           (rule "remove_parentheses_right" (formula "15") (term "1"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "assignmentMultiplicationInt" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "translateJavaMulInt" (formula "15") (term "0,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "15") (term "1"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "blockEmpty" (formula "15") (term "1"))
                           (rule "postincrement" (formula "15") (term "1"))
                           (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_51"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_65"))
                           (rule "remove_parentheses_right" (formula "15") (term "1"))
                           (rule "assignmentAdditionInt" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
                           (rule "add_literals" (formula "15") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "15") (term "1"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "blockEmpty" (formula "15") (term "1"))
                           (rule "loopUnwind" (formula "15") (term "1") (inst "#outerLabel=_label29") (inst "#innerLabel=_label28"))
                           (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_51"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_66"))
                           (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_68") (inst "#v0=x_67"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_67"))
                           (rule "assignment" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "variableDeclarationAssign" (formula "15") (term "1"))
                           (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_68"))
                           (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                           (rule "sub_literals" (formula "15") (term "0,1,0"))
                           (rule "less_than_comparison_simple" (formula "15") (term "1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "less_literals" (formula "15") (term "0,0,1,0"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "ifSplit" (formula "15"))
                           (branch "if x_66 true"
                              (builtin "One Step Simplification" (formula "16"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "compound_assignment_op_mul" (formula "15") (term "1"))
                              (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_51"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_69"))
                              (rule "remove_parentheses_right" (formula "15") (term "1"))
                              (rule "compound_multiplication_2" (formula "15") (term "1") (inst "#v1=x_71") (inst "#v0=x_70"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_70"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_71"))
                              (rule "remove_parentheses_right" (formula "15") (term "1"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "assignmentMultiplicationInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaMulInt" (formula "15") (term "0,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "15") (term "1"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "blockEmpty" (formula "15") (term "1"))
                              (rule "postincrement" (formula "15") (term "1"))
                              (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_51"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_72"))
                              (rule "remove_parentheses_right" (formula "15") (term "1"))
                              (rule "assignmentAdditionInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
                              (rule "add_literals" (formula "15") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "15") (term "1"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "blockEmpty" (formula "15") (term "1"))
                              (rule "loopUnwind" (formula "15") (term "1") (inst "#outerLabel=_label31") (inst "#innerLabel=_label30"))
                              (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_51"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_73"))
                              (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_75") (inst "#v0=x_74"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_74"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_75"))
                              (rule "assignmentSubtractionInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaSubInt" (formula "15") (term "0,1,0"))
                              (rule "sub_literals" (formula "15") (term "0,1,0"))
                              (rule "less_than_comparison_simple" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "less_literals" (formula "15") (term "0,0,1,0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "ifSplit" (formula "15"))
                              (branch "if x_73 true"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_73 false"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "blockEmpty" (formula "15") (term "1"))
                                 (rule "methodCallReturn" (formula "15") (term "1"))
                                 (rule "assignment" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "methodCallEmpty" (formula "15") (term "1"))
                                 (rule "blockEmpty" (formula "15") (term "1"))
                                 (rule "assignment" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "methodCallEmpty" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "emptyModality" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "notRight" (formula "15"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                 (rule "mul_literals" (formula "4") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "4"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "14"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "if x_66 false"
                              (builtin "One Step Simplification" (formula "16"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "if x_59 false"
                           (builtin "One Step Simplification" (formula "16"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "if x_52 false"
                        (builtin "One Step Simplification" (formula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
            )
            (branch "if x_21 false"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_geqRight" (formula "19"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "blockEmpty" (formula "21") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq0" (formula "18"))
               (rule "mul_literals" (formula "18") (term "1,0"))
               (rule "polySimp_addComm1" (formula "18") (term "0"))
               (rule "add_literals" (formula "18") (term "0,0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
               (rule "leq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "applyEq" (formula "19") (term "1,0,1,1,0") (ifseqformula "2"))
               (rule "add_literals" (formula "19") (term "0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
               (rule "mul_literals" (formula "16") (term "1"))
               (rule "methodCallReturn" (formula "19") (term "1"))
               (rule "assignment" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "blockEmpty" (formula "19") (term "1"))
               (rule "assignment" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "emptyModality" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "notRight" (formula "19"))
               (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "13") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "1"))
               (rule "qeq_literals" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
               (rule "polySimp_mulComm0" (formula "11") (term "0"))
               (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
               (rule "mul_literals" (formula "12") (term "1,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0"))
               (rule "inEqSimp_exactShadow2" (formula "8") (ifseqformula "11"))
               (rule "greater_literals" (formula "8") (term "0"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "polySimp_mulAssoc" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1"))
               (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "10"))
               (rule "greater_literals" (formula "13") (term "0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "13") (term "0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "13"))
               (rule "polySimp_mulLiterals" (formula "13") (term "0"))
               (rule "polySimp_elimOne" (formula "13") (term "0"))
               (rule "inEqSimp_exactShadow2" (formula "17") (ifseqformula "12"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1"))
               (rule "greater_literals" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "mul_literals" (formula "17") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17"))
               (rule "mul_literals" (formula "17") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "17"))
               (rule "leq_literals" (formula "2") (term "0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "inEqSimp_exactShadow1" (formula "13") (ifseqformula "14"))
               (rule "greater_literals" (formula "13") (term "0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "0,0"))
               (rule "mul_literals" (formula "13") (term "0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
               (rule "add_literals" (formula "13") (term "1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "17"))
               (rule "greater_literals" (formula "13") (term "0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "mul_literals" (formula "13") (term "1,0"))
               (rule "leq_literals" (formula "13") (term "0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "12"))
               (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "6") (term "0"))
               (rule "add_literals" (formula "6") (term "1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "6") (ifseqformula "16"))
               (rule "greater_literals" (formula "6") (term "0,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1,0"))
               (rule "leq_literals" (formula "6") (term "0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "12"))
               (rule "mul_literals" (formula "16") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0"))
               (rule "add_literals" (formula "16") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16"))
               (rule "mul_literals" (formula "16") (term "1"))
               (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "15"))
               (rule "mul_literals" (formula "16") (term "1,1,0"))
               (rule "greater_literals" (formula "16") (term "0,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "leq_literals" (formula "16") (term "0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "18"))
               (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(#))"))
               (rule "leq_literals" (formula "7") (term "0,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "neg_literal" (formula "7") (term "0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0"))
               (rule "qeq_literals" (formula "7") (term "0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "7"))
               (rule "leq_literals" (formula "5") (term "0"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "methodCallWithAssignmentWithinClass" (formula "20") (term "1") (inst "#v0=x"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_24"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_3"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_3"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_pow_1,savedHeapBefore_pow_1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_25"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_25"))
               (rule "equality_comparison_simple" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "equal_literals" (formula "20") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "ifSplit" (formula "20"))
               (branch "if x_25 true"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_25 false"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "res_2"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "for_to_while" (formula "20") (term "1") (inst "#outerLabel=_label13") (inst "#innerLabel=_label12"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_2"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label15") (inst "#innerLabel=_label14"))
                  (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_25"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_26"))
                  (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_28") (inst "#v0=x_27"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_27"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_28"))
                  (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                  (rule "sub_literals" (formula "20") (term "0,1,0"))
                  (rule "less_than_comparison_simple" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "ifSplit" (formula "20"))
                  (branch "if x_26 true"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                     (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_25"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_29"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_31") (inst "#v0=x_30"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_30"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_31"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "postincrement" (formula "20") (term "1"))
                     (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_25"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_32"))
                     (rule "remove_parentheses_right" (formula "20") (term "1"))
                     (rule "assignmentAdditionInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                     (rule "add_zero_left" (formula "20") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label17") (inst "#innerLabel=_label16"))
                     (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_25"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_33"))
                     (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_35") (inst "#v0=x_34"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_34"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "variableDeclarationAssign" (formula "20") (term "1"))
                     (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_35"))
                     (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                     (rule "sub_literals" (formula "20") (term "0,1,0"))
                     (rule "less_than_comparison_simple" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "less_literals" (formula "20") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "ifSplit" (formula "20"))
                     (branch "if x_33 true"
                        (builtin "One Step Simplification" (formula "21"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                        (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_25"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_36"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_38") (inst "#v0=x_37"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_37"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_38"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "blockEmpty" (formula "20") (term "1"))
                        (rule "postincrement" (formula "20") (term "1"))
                        (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_25"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_39"))
                        (rule "remove_parentheses_right" (formula "20") (term "1"))
                        (rule "assignmentAdditionInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                        (rule "add_literals" (formula "20") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "20") (term "1"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "blockEmpty" (formula "20") (term "1"))
                        (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label19") (inst "#innerLabel=_label18"))
                        (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_25"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_40"))
                        (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_42") (inst "#v0=x_41"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_41"))
                        (rule "assignment" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "variableDeclarationAssign" (formula "20") (term "1"))
                        (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_42"))
                        (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                        (rule "sub_literals" (formula "20") (term "0,1,0"))
                        (rule "less_than_comparison_simple" (formula "20") (term "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "less_literals" (formula "20") (term "0,0,1,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "ifSplit" (formula "20"))
                        (branch "if x_40 true"
                           (builtin "One Step Simplification" (formula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_40 false"
                           (builtin "One Step Simplification" (formula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "blockEmpty" (formula "20") (term "1"))
                           (rule "methodCallReturn" (formula "20") (term "1"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "methodCallEmpty" (formula "20") (term "1"))
                           (rule "blockEmpty" (formula "20") (term "1"))
                           (rule "assignment" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "methodCallEmpty" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "emptyModality" (formula "20") (term "1"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "notRight" (formula "20"))
                           (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                           (rule "applyEqRigid" (formula "4") (term "0,1,0") (ifseqformula "1"))
                           (rule "mul_literals" (formula "4") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "4"))
                           (rule "andLeft" (formula "13"))
                           (rule "inEqSimp_homoInEq1" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0"))
                           (rule "add_literals" (formula "13") (term "1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0"))
                           (rule "add_zero_right" (formula "13") (term "0"))
                           (rule "leq_literals" (formula "13"))
                           (rule "closeFalse" (formula "13"))
                        )
                     )
                     (branch "if x_33 false"
                        (builtin "One Step Simplification" (formula "21"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "if x_26 false"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch "if x_2 false"
            (builtin "One Step Simplification" (formula "21"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "19"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "blockEmpty" (formula "21") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
            (rule "applyEq" (formula "21") (term "1,0,1,1,0") (ifseqformula "16"))
            (rule "add_literals" (formula "21") (term "0,1,1,0"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
            (rule "leq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "17") (term "0") (ifseqformula "15"))
            (rule "inEqSimp_homoInEq0" (formula "17"))
            (rule "mul_literals" (formula "17") (term "1,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "0,0"))
            (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
            (rule "qeq_literals" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16"))
            (rule "mul_literals" (formula "16") (term "1"))
            (rule "methodCallReturn" (formula "19") (term "1"))
            (rule "assignment" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "methodCallEmpty" (formula "19") (term "1"))
            (rule "blockEmpty" (formula "19") (term "1"))
            (rule "assignment" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "methodCallEmpty" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "emptyModality" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "notRight" (formula "19"))
            (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "10") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "9") (term "0"))
            (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "1"))
            (rule "mul_literals" (formula "10") (term "1,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "polySimp_addComm1" (formula "10") (term "0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "inEqSimp_exactShadow2" (formula "14") (ifseqformula "9"))
            (rule "mul_literals" (formula "14") (term "1,0,0,1"))
            (rule "greater_literals" (formula "14") (term "0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "mul_literals" (formula "14") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
            (rule "mul_literals" (formula "14") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "14"))
            (rule "leq_literals" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_exactShadow1" (formula "10") (ifseqformula "7"))
            (rule "greater_literals" (formula "10") (term "0"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "polySimp_rightDist" (formula "10") (term "0,0"))
            (rule "mul_literals" (formula "10") (term "0,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "polySimp_elimOne" (formula "10") (term "0"))
            (rule "inEqSimp_exactShadow1" (formula "11") (ifseqformula "12"))
            (rule "greater_literals" (formula "11") (term "0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
            (rule "mul_literals" (formula "11") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0"))
            (rule "add_literals" (formula "11") (term "1,1,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11"))
            (rule "mul_literals" (formula "11") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "15"))
            (rule "leq_literals" (formula "11") (term "0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "inEqSimp_exactShadow2" (formula "6") (ifseqformula "9"))
            (rule "greater_literals" (formula "6") (term "0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "polySimp_mulAssoc" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "11"))
            (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
            (rule "add_literals" (formula "5") (term "1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
            (rule "mul_literals" (formula "5") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "15"))
            (rule "greater_literals" (formula "5") (term "0,0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "mul_literals" (formula "5") (term "1,0"))
            (rule "leq_literals" (formula "5") (term "0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "11"))
            (rule "mul_literals" (formula "15") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "0"))
            (rule "add_literals" (formula "15") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15"))
            (rule "mul_literals" (formula "15") (term "1"))
            (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "14"))
            (rule "mul_literals" (formula "15") (term "1,1,0"))
            (rule "greater_literals" (formula "15") (term "0,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "leq_literals" (formula "15") (term "0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "18"))
            (rule "polySimp_mulAssoc" (formula "6") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
            (rule "polySimp_addComm0" (formula "6") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "6"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(4(#))"))
            (rule "leq_literals" (formula "6") (term "0,0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
            (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
            (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
            (rule "add_literals" (formula "6") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "qeq_literals" (formula "6") (term "0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "6"))
            (rule "leq_literals" (formula "4") (term "0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "methodCallWithAssignmentWithinClass" (formula "20") (term "1") (inst "#v0=x"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_5"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "a_2"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "variableDeclarationAssign" (formula "20") (term "1"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "b_2"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_pow_0,savedHeapBefore_pow_0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_6"))
            (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_6"))
            (rule "equality_comparison_simple" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "equal_literals" (formula "20") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "ifSplit" (formula "20"))
            (branch "if x_6 true"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_6 false"
               (builtin "One Step Simplification" (formula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "res_1"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "for_to_while" (formula "20") (term "1") (inst "#outerLabel=_label5") (inst "#innerLabel=_label4"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "i_1"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label7") (inst "#innerLabel=_label6"))
               (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_6"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_7"))
               (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_9") (inst "#v0=x_8"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_8"))
               (rule "assignment" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "variableDeclarationAssign" (formula "20") (term "1"))
               (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_9"))
               (rule "assignmentSubtractionInt" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
               (rule "sub_literals" (formula "20") (term "0,1,0"))
               (rule "less_than_comparison_simple" (formula "20") (term "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "less_literals" (formula "20") (term "0,0,1,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "ifSplit" (formula "20"))
               (branch "if x_7 true"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "compound_assignment_op_mul" (formula "20") (term "1"))
                  (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_6"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_10"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "compound_multiplication_2" (formula "20") (term "1") (inst "#v1=x_12") (inst "#v0=x_11"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_11"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_12"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "assignmentMultiplicationInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaMulInt" (formula "20") (term "0,1,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "postincrement" (formula "20") (term "1"))
                  (rule "compound_int_cast_expression" (formula "20") (term "1") (inst "#v=x_6"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_13"))
                  (rule "remove_parentheses_right" (formula "20") (term "1"))
                  (rule "assignmentAdditionInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaAddInt" (formula "20") (term "0,1,0"))
                  (rule "add_zero_left" (formula "20") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "20") (term "1"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "loopUnwind" (formula "20") (term "1") (inst "#outerLabel=_label9") (inst "#innerLabel=_label8"))
                  (rule "ifUnfold" (formula "20") (term "1") (inst "#boolv=x_6"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_14"))
                  (rule "compound_less_than_comparison_2" (formula "20") (term "1") (inst "#v1=x_16") (inst "#v0=x_15"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_15"))
                  (rule "assignment" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "variableDeclarationAssign" (formula "20") (term "1"))
                  (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_16"))
                  (rule "assignmentSubtractionInt" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "translateJavaSubInt" (formula "20") (term "0,1,0"))
                  (rule "sub_literals" (formula "20") (term "0,1,0"))
                  (rule "less_than_comparison_simple" (formula "20") (term "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "less_literals" (formula "20") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "ifSplit" (formula "20"))
                  (branch "if x_14 true"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_14 false"
                     (builtin "One Step Simplification" (formula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "methodCallReturn" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "methodCallEmpty" (formula "20") (term "1"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "assignment" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "methodCallEmpty" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "emptyModality" (formula "20") (term "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "notRight" (formula "20"))
                     (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                     (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "1"))
                     (rule "mul_literals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "12"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
               )
               (branch "if x_7 false"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
      )
   )
)
(branch
   (builtin "One Step Simplification" (formula "11"))
   (rule "equal_literals" (formula "11") (term "0"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "closeTrue" (formula "11"))
)
)

}
//statementid:{da424e45-3cf7-499e-b12f-9907bbf1939a}