\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Feb 14 18:53:44 CET 2024
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\\:disableStaticInitialisation , wdChecks-wdChecks\\:off , optimisedSelectRules-optimisedSelectRules\\:on , reach-reach\\:on , moreSeqRules-moreSeqRules\\:off , sequences-sequences\\:on , Strings-Strings\\:on , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off , runtimeExceptions-runtimeExceptions\\:ban , wdOperator-wdOperator\\:L , JavaCard-JavaCard\\:off , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , modelFields-modelFields\\:showSatisfiability , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , bigint-bigint\\:on , programRules-programRules\\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=2147483647
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "C:/Users/DirkNeumann/eclipse-workspaces/runtime-EclipseApplication/de.tu_bs.cs.isf.corc.examples";
\include "helper.key";
\programVariables {
int[] A;
int t;
int wt;
int wb;
int bb;
int[] A;
int t;
int wt;
int wb;
int bb;
int[] A_old;
int t_old;
Heap heapAtPre;
}\problem {
     s(A, Z(0(#)), Z(0(#)), length(A))
   & !A = null
   & gt(length(A), Z(0(#)))
   & leq(Z(0(#)), wb)
   & leq(wb, wt)
   & leq(wt, bb)
   & leq(bb, length(A))
   & \forall int i;
       (   geq(i, Z(0(#))) & lt(i, length(A))
        ->   int::select(heap, A, arr(i)) = Z(0(#))
           | int::select(heap, A, arr(i)) = Z(1(#))
           | int::select(heap, A, arr(i)) = Z(2(#)))
   &   boolean::select(heap,
                       A,
                       java.lang.Object::<created>)
     = TRUE
   &   boolean::select(heap,
                       A,
                       java.lang.Object::<created>)
     = TRUE
   &   boolean::select(heap,
                       A_old,
                       java.lang.Object::<created>)
     = TRUE
   & wellFormed(heap)
-> {heapAtPre:=heap || A_old:=A || t_old:=t}
     \<{
         wb=0;
         wt=0;
         bb=A.length;
       }\> (s(A, wb, wt, bb) & A = A_old & t = t_old)

}

\proof {
(keyLog "0" (keyUser "DirkNeumann" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "267")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "12") (term "1,0,0,1"))
(rule "eqSymm" (formula "12") (term "1,0,1"))
(rule "s_toC" (formula "12") (term "0,0,0,1"))
(rule "s_toC" (formula "1"))
(builtin "One Step Simplification" (formula "1"))
(rule "leq_literals" (formula "1") (term "1,0,0"))
(builtin "One Step Simplification" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "c_toForAll" (formula "16") (term "0,0,0,0,0,0,0,0,0,1") (inst "q=q"))
(rule "c_toForAll" (formula "16") (term "1,0,0,0,0,0,0,0,1") (inst "q=q"))
(rule "c_toForAll" (formula "16") (term "1,0,0,0,0,0,0,0,0,1") (inst "q=q"))
(rule "c_toForAll" (formula "3") (inst "q=q"))
(rule "c_toForAll" (formula "1") (inst "q=q"))
(rule "c_toForAll" (formula "2") (inst "q=q"))
(rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
(rule "inEqSimp_gtToGeq" (formula "6"))
(rule "mul_literals" (formula "6") (term "1,0,0"))
(rule "add_literals" (formula "6") (term "0,0"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
(rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "1") (term "0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
(rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "2") (term "0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "inEqSimp_homoInEq0" (formula "5"))
(rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
(rule "add_literals" (formula "5") (term "1,0"))
(rule "times_zero_1" (formula "5") (term "0"))
(rule "qeq_literals" (formula "5"))
(rule "true_left" (formula "5"))
(rule "assignment" (formula "15") (term "1"))
(builtin "One Step Simplification" (formula "15"))
(rule "assignment" (formula "15") (term "1"))
(builtin "One Step Simplification" (formula "15"))
(rule "assignment_read_length" (formula "15"))
(branch "Normal Execution (A != null)"
   (builtin "One Step Simplification" (formula "15"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
   (rule "mul_literals" (formula "5") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
   (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
   (rule "mul_literals" (formula "2") (term "1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
   (rule "leq_literals" (formula "4") (term "0"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "true_left" (formula "4"))
   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
   (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
   (rule "polySimp_addComm0" (formula "6") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "6"))
   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
   (rule "polySimp_elimOne" (formula "6") (term "0"))
   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
   (rule "times_zero_1" (formula "5") (term "0,0"))
   (rule "add_zero_left" (formula "5") (term "0"))
   (rule "nnf_imp2or" (formula "11") (term "0"))
   (rule "nnf_imp2or" (formula "3") (term "0"))
   (rule "nnf_imp2or" (formula "1") (term "0"))
   (rule "nnf_imp2or" (formula "2") (term "0"))
   (rule "nnf_notAnd" (formula "11") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
   (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
   (rule "mul_literals" (formula "11") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "3") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "nnf_notAnd" (formula "1") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "nnf_notAnd" (formula "1") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "nnf_imp2or" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,1"))
   (rule "nnf_imp2or" (formula "13") (term "0,1,0,0,0,0,0,0,0,1"))
   (rule "nnf_imp2or" (formula "13") (term "0,1,0,0,0,0,0,0,0,0,1"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,0,0,1"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,0,0,0,1"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1"))
   (rule "shift_paren_or" (formula "8") (term "0"))
   (rule "shift_paren_or" (formula "8") (term "0,0"))
   (rule "emptyModality" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "add_zero_right" (formula "13") (term "1,0,0,0,1,0,0,0,0"))
   (rule "qeq_literals" (formula "13") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0"))
   (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
   (rule "polySimp_pullOutFactor1" (formula "13") (term "0,1"))
   (rule "add_literals" (formula "13") (term "1,0,1"))
   (rule "times_zero_1" (formula "13") (term "0,1"))
   (rule "leq_literals" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "inEqSimp_subsumption1" (formula "13") (term "1") (ifseqformula "1"))
   (rule "leq_literals" (formula "13") (term "0,1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "inEqSimp_or_tautInEq0" (formula "13") (term "0,0,0,0"))
   (rule "add_zero_right" (formula "13") (term "1,1,0,0,0,0"))
   (rule "qeq_literals" (formula "13") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "inEqSimp_or_tautInEq0" (formula "13") (term "0,0,0"))
   (rule "add_zero_right" (formula "13") (term "1,1,0,0,0"))
   (rule "qeq_literals" (formula "13") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "allRight" (formula "13") (inst "sk=q_0"))
   (rule "orRight" (formula "13"))
   (rule "orRight" (formula "13"))
   (rule "inEqSimp_leqRight" (formula "13"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0"))
   (rule "polySimp_addComm0" (formula "1") (term "0"))
   (rule "inEqSimp_geqRight" (formula "14"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
   (rule "polySimp_elimOne" (formula "2") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_homoInEq1" (formula "1"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "1,1,0"))
   (rule "times_zero_1" (formula "1") (term "1,0"))
   (rule "add_zero_right" (formula "1") (term "0"))
   (rule "leq_literals" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "Null Reference (A = null)"
   (builtin "One Step Simplification" (formula "16"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
   (rule "closeFalse" (formula "1"))
)
)

}
//statementid:{7a0a652e-1c05-45fa-9508-117e57b6e42d}